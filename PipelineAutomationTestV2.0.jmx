<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Pipeline" enabled="true">
      <stringProp name="TestPlan.comments">Example of using CSV DataSet</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="token" elementType="Argument">
            <stringProp name="Argument.name">token</stringProp>
            <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3dpbmRvd3NhY2NvdW50bmFtZSI6IkpSZXN0cmVwbzIiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjE5MTcwIiwiaHR0cDovL215LW1uZXQvb2ZmaWNlcyI6Ijk5MywwNzQsMDIzLDAxNiwwODksMDU1LDA5OCwwNzAsMDQ2LDA1NiwwMzQsOTk2LDMwMiw5OTksMDY2LDA0NSwwMTgsMDUyLDAzNywwMTUsMDk1LDA2NywwMzYsMDQ0LDA2MiwwODIsMDMyLDk5OCwwOTIsMDA2LDAwNSwwMjksMDkxLDAxMiw1MTEsMDY5LDAyNCwwNDEsMDg4LDA1OSwwOTMsMDYwLDA4MCwwMDQsMDI2LDA3NywwNzUsMDQ3LDA1NCwwOTYsMDUwLDAyMiwwNzksMDEzLDAxNCwwNTMsMDQzLDAzMyw5OTcsMDYzLDAzOSwwMTcsMDUxLDAwMCw5OTQsMDg3LDA0OCwwMzUsMDI4LDA1OCwwMTAsMDQwLDA2MSwwNzMsMDA4LDAzMSwzMDQsMDk3LDAwMSw5OTUsMDMwLDAwNyw5OTIsMDcxLDAyMSw5OTEsMDgxLDA3OCwwNDIsMDcyLDEwMCwwMDMsMDIwLDA0OSwwMDksMDAyLDA5NCwwMTEsMDg0LDk5Myw1NTAsMDY4LDAyNSwwODYsMzAxLDAxOSwwODMsMzAzLDA1NywwNjQsMDI3LDAzOCwwODUsMDc2LDA5OSwwNjUsNTE2LDUwNiw1MDUsMzA2LDU0MSw1MDQsMTAzLDMwNSwzMzEiLCJodHRwOi8vbXktbW5ldC9jb21wYW5pZXMiOiI1IiwiaHR0cDovL215LW1uZXQvc3BlY2lhbHRpZXMiOiIiLCJodHRwOi8vbXktbW5ldC9yb2xlcyI6IjI2IiwiaHR0cDovL215LW1uZXQvaXNJcGEiOiJGYWxzZSIsImh0dHA6Ly9teS1tbmV0L21hbmFnZWRJZHMiOiIiLCJodHRwOi8vbXktbW5ldC9ib3JNYW5hZ2VyU3RhdGVzIjoiIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwOS8wOS9pZGVudGl0eS9jbGFpbXMvYWN0b3IiOiJTQmVja2VyIiwiaHR0cDovL215LW1uZXQvd2luZG93c0FjY291bnRJZCI6IjI2OTQyIiwiZXhwIjoxNjY2OTkzMDAxLCJpc3MiOiJtbXJlaWJjLnBydiIsImF1ZCI6Im1tcmVpYmMucHJ2In0.WCqBDTyOrhQezn11Rm5zHCZ2pGIfYc3nDDK_E5oARt8</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="environment" elementType="Argument">
            <stringProp name="Argument.name">environment</stringProp>
            <stringProp name="Argument.value">staging-</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="officeId" elementType="Argument">
            <stringProp name="Argument.name">officeId</stringProp>
            <stringProp name="Argument.value">996</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="accountantUser" elementType="Argument">
            <stringProp name="Argument.name">accountantUser</stringProp>
            <stringProp name="Argument.value">MMNetTestLastE2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">${token}</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">${token}</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="PrepareDates" enabled="true">
        <boolProp name="resetInterpreter">false</boolProp>
        <stringProp name="parameters"></stringProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="script">log.info (&quot;Preparing dates&quot;);
String today = &quot;${__time(MM-dd-yyyy)}&quot;;
String todayPlus2 = &quot;${__timeShift(MM-dd-yyyy,,P2D,,)}&quot;;

vars.put(&quot;today&quot;, today);
vars.put(&quot;todayPlus2&quot;, todayPlus2);

String month = today.substring(0,2);
String day = today.substring(3,5);
String year = today.substring(6,10);

vars.put(&quot;month&quot;, month);
vars.put(&quot;day&quot;, day);
vars.put(&quot;year&quot;, year);</stringProp>
      </BeanShellPreProcessor>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Mnet Launch" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1226457982000</longProp>
        <longProp name="ThreadGroup.end_time">1226457982000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="0. ------ Create Form and load Dropdowns" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="New_property-sub-types" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/dropdowns/property-sub-types</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="New_agent-offices" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/dropdowns/agent-offices</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="New_property-sub-types" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/dropdowns/property-types</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="New_office-jurisdiction" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/workflow/office-jurisdiction-code/${officeId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetOfficeCode" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">officeCode</stringProp>
              <stringProp name="RegexExtractor.regex">jurisdictionCode&quot;:&quot;(.+?)&quot;}</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1. ------ Create Opportunity" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Opport_Property-countries" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/dropdowns/property-countries</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Opport_brokerage-employees1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/dropdowns/brokerage-employees/1</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="------ Dropdowns ------" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Opport_originators" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/originators</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Opport_salutations" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/salutations</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Opport_contacts" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/contacts</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Opport_deals (Submit)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;dealId&quot;: null,&#xd;
	&quot;dealStatusId&quot;: 1,&#xd;
	&quot;dealLifeCycleGroupId&quot;: 1,&#xd;
	&quot;accessControlStatus&quot;: null,&#xd;
	&quot;workflowTypeId&quot;: 4,&#xd;
	&quot;sellerInfo&quot;: {&#xd;
		&quot;side&quot;: &quot;L&quot;,&#xd;
		&quot;clients&quot;: [&#xd;
			{&#xd;
				&quot;phone&quot;: &quot;456-120-1921&quot;,&#xd;
				&quot;email&quot;: &quot;Dave_Rowe@gmail.com&quot;,&#xd;
				&quot;isEquityPartner&quot;: false,&#xd;
				&quot;exchangePropertyState&quot;: null,&#xd;
				&quot;firstName&quot;: &quot;Daren&quot;,&#xd;
				&quot;middleName&quot;: &quot;Tomas&quot;,&#xd;
				&quot;lastName&quot;: &quot;King&quot;,&#xd;
				&quot;salutationId&quot;: 17,&#xd;
				&quot;title&quot;: &quot;Global Applications Associate&quot;,&#xd;
				&quot;company&quot;: &quot;Yost Inc&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;majorMarketRivalId&quot;: null&#xd;
	},&#xd;
	&quot;agentInfo&quot;: {&#xd;
		&quot;officeId&quot;: &quot;${officeId}&quot;,&#xd;
		&quot;officeCode&quot;: &quot;${officeCode}&quot;,&#xd;
		&quot;feeSplitAllocationTypeId&quot;: 2,&#xd;
		&quot;listingAgents&quot;: [&#xd;
			{&#xd;
				&quot;commissionShare&quot;: 0&#xd;
			}&#xd;
		],&#xd;
		&quot;originatorIds&quot;: [],&#xd;
		&quot;brokerOfRecord&quot;: null&#xd;
	},&#xd;
	&quot;propertyInfo&quot;: {&#xd;
		&quot;propertyName&quot;: &quot;Automate Pipeline JR 2&quot;,&#xd;
		&quot;commercialSquareFeet&quot;: null,&#xd;
		&quot;residentialSquareFeet&quot;: null,&#xd;
		&quot;address1&quot;: &quot;${address1}&quot;,&#xd;
		&quot;address2&quot;: &quot;&quot;,&#xd;
		&quot;locality&quot;: &quot;${locality}&quot;,&#xd;
		&quot;administrativeAreaLevelOne&quot;: &quot;${officeCode}&quot;,&#xd;
		&quot;postalCode&quot;: &quot;${postalCode}&quot;,&#xd;
		&quot;country&quot;: &quot;US&quot;,&#xd;
		&quot;longitude&quot;: ${longitude},&#xd;
		&quot;latitude&quot;: ${latitude},&#xd;
		&quot;addressCheckServiceId&quot;: 1,&#xd;
		&quot;administrativeAreaLevelTwo&quot;: &quot;${areaLevel2}&quot;,&#xd;
		&quot;portfolioId&quot;: null,&#xd;
		&quot;propertyTypeId&quot;: 2,&#xd;
		&quot;propertySubTypeId&quot;: 2,&#xd;
		&quot;seniorFacilityTypeId&quot;: null,&#xd;
		&quot;strategyTypeId&quot;: null,&#xd;
		&quot;lotSize&quot;: null,&#xd;
		&quot;lotSizeUnitOfMeasurement&quot;: null,&#xd;
		&quot;yearBuilt&quot;: null,&#xd;
		&quot;yearLastRenovated&quot;: null,&#xd;
		&quot;numUnits&quot;: null,&#xd;
		&quot;rentableSqFt&quot;: null,&#xd;
		&quot;grossSqFt&quot;: null,&#xd;
		&quot;numberOfSuites&quot;: null&#xd;
	},&#xd;
	&quot;comparableInfo&quot;: {&#xd;
		&quot;comparables&quot;: []&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetDealId" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">dealId</stringProp>
              <stringProp name="RegexExtractor.regex">(.*)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Opport_submit" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;dealId&quot;: ${dealId},&#xd;
	&quot;notes&quot;: null,&#xd;
	&quot;type&quot;: 4&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/submit</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetActivityId" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">activityId</stringProp>
              <stringProp name="RegexExtractor.regex">{&quot;activityId&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Opport_loadActivities" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;group&quot;: 2,&#xd;
	&quot;filter&quot;: {&#xd;
		&quot;keyword&quot;: &quot;&quot;,&#xd;
		&quot;tags&quot;: [],&#xd;
		&quot;office&quot;: &quot;&quot;,&#xd;
		&quot;agent&quot;: &quot;&quot;,&#xd;
		&quot;statusFilters&quot;: []&#xd;
	},&#xd;
	&quot;pageIndex&quot;: 1,&#xd;
	&quot;pageSize&quot;: 10,&#xd;
	&quot;sort&quot;: {&#xd;
		&quot;direction&quot;: -1,&#xd;
		&quot;sortBy&quot;: 1,&#xd;
		&quot;displayName&quot;: &quot;New - Old&quot;&#xd;
	},&#xd;
	&quot;tab&quot;: 2&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/pipeline/activities</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="2. ------ Move to Proposal and Submit" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Propos_Transition" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/transition/${dealId}/1/2</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Propos_getActivityId" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/pipeline/activity/${dealId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetActivityId2" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">activityId2</stringProp>
              <stringProp name="RegexExtractor.regex">,&quot;activityId&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Test Verify Activity and dealID" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script"></stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Propos_getActivitiesG1" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;group&quot;: 1,&#xd;
	&quot;filter&quot;: {&#xd;
		&quot;keyword&quot;: &quot;&quot;,&#xd;
		&quot;tags&quot;: [],&#xd;
		&quot;office&quot;: &quot;&quot;,&#xd;
		&quot;agent&quot;: &quot;&quot;,&#xd;
		&quot;statusFilters&quot;: []&#xd;
	},&#xd;
	&quot;pageIndex&quot;: 1,&#xd;
	&quot;pageSize&quot;: 10,&#xd;
	&quot;sort&quot;: {&#xd;
		&quot;direction&quot;: -1,&#xd;
		&quot;sortBy&quot;: 1,&#xd;
		&quot;displayName&quot;: &quot;New - Old&quot;&#xd;
	},&#xd;
	&quot;tab&quot;: 2&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/pipeline/activities</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Propos_getActivitiesG2" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;group&quot;: 2,&#xd;
	&quot;filter&quot;: {&#xd;
		&quot;keyword&quot;: &quot;&quot;,&#xd;
		&quot;tags&quot;: [],&#xd;
		&quot;office&quot;: &quot;&quot;,&#xd;
		&quot;agent&quot;: &quot;&quot;,&#xd;
		&quot;statusFilters&quot;: []&#xd;
	},&#xd;
	&quot;pageIndex&quot;: 1,&#xd;
	&quot;pageSize&quot;: 10,&#xd;
	&quot;sort&quot;: {&#xd;
		&quot;direction&quot;: -1,&#xd;
		&quot;sortBy&quot;: 1,&#xd;
		&quot;displayName&quot;: &quot;New - Old&quot;&#xd;
	},&#xd;
	&quot;tab&quot;: 2&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/pipeline/activities</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Propos_WorkFlowElevedAccess" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/workflow/elevated-access/${dealId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Propos_Save-for-later" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/save-for-later/${dealId} </stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Propos_Status-history" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/status-history/${dealId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Propos_Documents?" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/documents?dealId=${dealId}&amp;lifeCycleGroupId=2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Propos_Legal-documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;dealLifeCycleGroup&quot;: 2,&#xd;
	&quot;administrativeAreaLevelOne&quot;: &quot;${officeCode}&quot;,&#xd;
	&quot;country&quot;: &quot;US&quot;,&#xd;
	&quot;listingOfficeId&quot;: &quot;${officeId}&quot;,&#xd;
	&quot;activityMethodId&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/legal-documents</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="------ Dropdowns ------" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Propos_Agent-Offices" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/agent-offices</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Propos_Property-countries" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/property-countries</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Propos_brokerage-employees2" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/brokerage-employees/2</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Propos_contacts" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/contacts</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Propos_salutations" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/salutations</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Propos_originators" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/originators</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Propos_proposed-finance-categories" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/proposed-finance-categories</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Propos_property-image-types" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/property-image-types</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="------ Upload images ------" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Propos_UploadDisplayMain" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="C:\Users\julian.restrepob\Pictures\AutoIMG1.jpg" elementType="HTTPFileArg">
                    <stringProp name="File.path">C:\Users\julian.restrepob\Pictures\AutoIMG1.jpg</stringProp>
                    <stringProp name="File.paramname">files</stringProp>
                    <stringProp name="File.mimetype">image/jpeg</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/activity-file-storage/property-image</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetPhotoId1" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">photoId1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;fileId&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Propos_UploadDisplay2" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="C:\Users\julian.restrepob\Pictures\AutoIMG2.jpg" elementType="HTTPFileArg">
                    <stringProp name="File.path">C:\Users\julian.restrepob\Pictures\AutoIMG2.jpg</stringProp>
                    <stringProp name="File.paramname">files</stringProp>
                    <stringProp name="File.mimetype">image/jpeg</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/activity-file-storage/property-image</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetPhotoId2" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">photoId2</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;fileId&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Propos_deals (Submit)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;activityId&quot;: &quot;${activityId}&quot;,&#xd;
	&quot;dealId&quot;: ${dealId},&#xd;
	&quot;dealLifeCycleGroupId&quot;: 2,&#xd;
	&quot;workflowTypeId&quot;: 4,&#xd;
	&quot;accessControlStatus&quot;: null,&#xd;
	&quot;sellerInfo&quot;: {&#xd;
		&quot;side&quot;: &quot;L&quot;,&#xd;
		&quot;clients&quot;: [&#xd;
			{&#xd;
				&quot;phone&quot;: &quot;456-120-1921&quot;,&#xd;
				&quot;email&quot;: &quot;Dave_Rowe@gmail.com&quot;,&#xd;
				&quot;isEquityPartner&quot;: null,&#xd;
				&quot;exchangePropertyState&quot;: null,&#xd;
				&quot;firstName&quot;: &quot;Daren&quot;,&#xd;
				&quot;middleName&quot;: &quot;Tomas&quot;,&#xd;
				&quot;lastName&quot;: &quot;King&quot;,&#xd;
				&quot;salutationId&quot;: 17,&#xd;
				&quot;title&quot;: &quot;Global Applications Associate&quot;,&#xd;
				&quot;company&quot;: &quot;Yost Inc&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;majorMarketRivalId&quot;: null&#xd;
	},&#xd;
	&quot;agentInfo&quot;: {&#xd;
		&quot;officeId&quot;: &quot;${officeId}&quot;,&#xd;
		&quot;officeCode&quot;: &quot;${officeCode}&quot;,&#xd;
		&quot;feeSplitAllocationTypeId&quot;: 2,&#xd;
		&quot;listingAgents&quot;: [&#xd;
			{&#xd;
				&quot;agentId&quot;: 24783,&#xd;
				&quot;commissionShare&quot;: 0&#xd;
			}&#xd;
		],&#xd;
		&quot;originatorIds&quot;: [&#xd;
			15085&#xd;
		],&#xd;
		&quot;brokerOfRecord&quot;: null&#xd;
	},&#xd;
	&quot;propertyInfo&quot;: {&#xd;
		&quot;propertyName&quot;: &quot;Automate Pipeline JR 2 ${dealId}&quot;,&#xd;
		&quot;commercialSquareFeet&quot;: null,&#xd;
		&quot;residentialSquareFeet&quot;: null,&#xd;
		&quot;address1&quot;: &quot;${address1}&quot;,&#xd;
		&quot;address2&quot;: &quot;&quot;,&#xd;
		&quot;locality&quot;: &quot;${locality}&quot;,&#xd;
		&quot;administrativeAreaLevelOne&quot;: &quot;${officeCode}&quot;,&#xd;
		&quot;postalCode&quot;: &quot;${postalCode}&quot;,&#xd;
		&quot;country&quot;: &quot;US&quot;,&#xd;
		&quot;longitude&quot;: ${longitude},&#xd;
		&quot;latitude&quot;: ${latitude},&#xd;
		&quot;addressCheckServiceId&quot;: 1,&#xd;
		&quot;administrativeAreaLevelTwo&quot;: &quot;${areaLevel2}&quot;,&#xd;
		&quot;portfolioId&quot;: null,&#xd;
		&quot;propertyTypeId&quot;: 2,&#xd;
		&quot;propertySubTypeId&quot;: 2,&#xd;
		&quot;seniorFacilityTypeId&quot;: null,&#xd;
		&quot;strategyTypeId&quot;: null,&#xd;
		&quot;lotSize&quot;: null,&#xd;
		&quot;lotSizeUnitOfMeasurement&quot;: 1,&#xd;
		&quot;yearBuilt&quot;: null,&#xd;
		&quot;yearLastRenovated&quot;: null,&#xd;
		&quot;numUnits&quot;: null,&#xd;
		&quot;rentableSqFt&quot;: null,&#xd;
		&quot;grossSqFt&quot;: null,&#xd;
		&quot;numberOfSuites&quot;: null&#xd;
	},&#xd;
	&quot;associatedFiles&quot;: {&#xd;
		&quot;publicRepAgreement&quot;: null,&#xd;
		&quot;executiveSummary&quot;: null,&#xd;
		&quot;repAgreement&quot;: null,&#xd;
		&quot;purchaseAndSale&quot;: null,&#xd;
		&quot;auctionAgreement&quot;: null,&#xd;
		&quot;additional&quot;: [],&#xd;
		&quot;memorandum&quot;: null,&#xd;
		&quot;settlementStatement&quot;: null&#xd;
	},&#xd;
	&quot;rcmInfo&quot;: null,&#xd;
	&quot;comparableInfo&quot;: {&#xd;
		&quot;comparables&quot;: []&#xd;
	},&#xd;
	&quot;marketingInfo&quot;: {&#xd;
		&quot;photos&quot;: [&#xd;
			{&#xd;
				&quot;fileId&quot;: &quot;${photoId1}&quot;,&#xd;
				&quot;propertyImageTypeId&quot;: 1,&#xd;
				&quot;propertyImageFileName&quot;: &quot;AutoIMG1.jpg&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;fileId&quot;: &quot;${photoId2}&quot;,&#xd;
				&quot;propertyImageTypeId&quot;: 13,&#xd;
				&quot;propertyImageFileName&quot;: &quot;AutoIMG2.jpg&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;propertyHighlights&quot;: [&#xd;
			null&#xd;
		],&#xd;
		&quot;propertyOverview&quot;: &quot;&quot;,&#xd;
		&quot;marketingObjectionStrategies&quot;: [&#xd;
			{&#xd;
				&quot;objection&quot;: null,&#xd;
				&quot;strategyToOvercomeObjection&quot;: null&#xd;
			}&#xd;
		]&#xd;
	},&#xd;
	&quot;financialInfo&quot;: {&#xd;
		&quot;unitMixes&quot;: [&#xd;
			{&#xd;
				&quot;typeDescription&quot;: null,&#xd;
				&quot;typeId&quot;: null,&#xd;
				&quot;amount&quot;: null,&#xd;
				&quot;avgUnitRent&quot;: null,&#xd;
				&quot;avgUnitSize&quot;: null&#xd;
			}&#xd;
		],&#xd;
		&quot;proposedPrice&quot;: null,&#xd;
		&quot;customLabelYearOne&quot;: &quot;Current&quot;,&#xd;
		&quot;customLabelYearTwo&quot;: &quot;Pro Forma&quot;,&#xd;
		&quot;downPayment&quot;: null,&#xd;
		&quot;loanType&quot;: null,&#xd;
		&quot;capOverLease&quot;: null,&#xd;
		&quot;franchiseFee&quot;: null,&#xd;
		&quot;acquisitionCost&quot;: null,&#xd;
		&quot;homeInventoryCost&quot;: null,&#xd;
		&quot;leaseType&quot;: null,&#xd;
		&quot;guarantor&quot;: null,&#xd;
		&quot;saleLeaseback&quot;: null,&#xd;
		&quot;leaseTerm&quot;: null,&#xd;
		&quot;netOperatingIncome&quot;: null,&#xd;
		&quot;capRate&quot;: null,&#xd;
		&quot;expenses&quot;: null,&#xd;
		&quot;debtService&quot;: null,&#xd;
		&quot;totalReturnPercent&quot;: null,&#xd;
		&quot;totalReturnAmount&quot;: null,&#xd;
		&quot;totalVacancyCost&quot;: null,&#xd;
		&quot;totalOtherIncome&quot;: null,&#xd;
		&quot;expenseReimbursement&quot;: null,&#xd;
		&quot;tenantImprovements&quot;: null,&#xd;
		&quot;leasingCommissions&quot;: null,&#xd;
		&quot;occupancy&quot;: null,&#xd;
		&quot;grossPotentialRent&quot;: null,&#xd;
		&quot;roomsRevenue&quot;: null,&#xd;
		&quot;revPar&quot;: null,&#xd;
		&quot;grossPotentialHomeRents&quot;: null,&#xd;
		&quot;roomsRevenueMultiplier&quot;: null,&#xd;
		&quot;netOperatingIncomePF&quot;: null,&#xd;
		&quot;capRatePF&quot;: null,&#xd;
		&quot;expensesPF&quot;: null,&#xd;
		&quot;debtServicePF&quot;: null,&#xd;
		&quot;totalReturnPercentPF&quot;: null,&#xd;
		&quot;totalReturnAmountPF&quot;: null,&#xd;
		&quot;totalVacancyCostPF&quot;: null,&#xd;
		&quot;totalOtherIncomePF&quot;: null,&#xd;
		&quot;expenseReimbursementPF&quot;: null,&#xd;
		&quot;tenantImprovementsPF&quot;: null,&#xd;
		&quot;leasingCommissionsPF&quot;: null,&#xd;
		&quot;occupancyPF&quot;: null,&#xd;
		&quot;grossPotentialRentPF&quot;: null,&#xd;
		&quot;roomsRevenuePF&quot;: null,&#xd;
		&quot;roomsRevenueMultiplierPF&quot;: null,&#xd;
		&quot;ADRPF&quot;: null,&#xd;
		&quot;revParPF&quot;: null,&#xd;
		&quot;grossPotentialHomeRentsPF&quot;: null,&#xd;
		&quot;buildableUnits&quot;: null,&#xd;
		&quot;developmentType&quot;: null,&#xd;
		&quot;buildableSF&quot;: null,&#xd;
		&quot;numOfLots&quot;: null,&#xd;
		&quot;floorAreaRatio&quot;: null,&#xd;
		&quot;density&quot;: null,&#xd;
		&quot;tenants&quot;: null&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetDealId" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">dealId</stringProp>
              <stringProp name="RegexExtractor.regex">(.*)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Propos_submit" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;dealId&quot;: ${dealId},&#xd;
	&quot;notes&quot;: null,&#xd;
	&quot;type&quot;: 4&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/submit</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetActivityId" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">activityId</stringProp>
              <stringProp name="RegexExtractor.regex">{&quot;activityId&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Propos_loadActivities" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;group&quot;: 2,&#xd;
	&quot;filter&quot;: {&#xd;
		&quot;keyword&quot;: &quot;&quot;,&#xd;
		&quot;tags&quot;: [],&#xd;
		&quot;office&quot;: &quot;&quot;,&#xd;
		&quot;agent&quot;: &quot;&quot;,&#xd;
		&quot;statusFilters&quot;: []&#xd;
	},&#xd;
	&quot;pageIndex&quot;: 1,&#xd;
	&quot;pageSize&quot;: 10,&#xd;
	&quot;sort&quot;: {&#xd;
		&quot;direction&quot;: -1,&#xd;
		&quot;sortBy&quot;: 1,&#xd;
		&quot;displayName&quot;: &quot;New - Old&quot;&#xd;
	},&#xd;
	&quot;tab&quot;: 2&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/pipeline/activities</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="3. ------ Move to LIsting and Submit" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_Transition" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/transition/${dealId}/2/3</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_getActivityId" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/pipeline/activity/${dealId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetActivityId2" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">activityId2</stringProp>
              <stringProp name="RegexExtractor.regex">,&quot;activityId&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Test Verify Activity and dealID" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script"></stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_getActivitiesG2" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;group&quot;: 3,&#xd;
	&quot;filter&quot;: {&#xd;
		&quot;keyword&quot;: &quot;&quot;,&#xd;
		&quot;tags&quot;: [],&#xd;
		&quot;office&quot;: &quot;&quot;,&#xd;
		&quot;agent&quot;: &quot;&quot;,&#xd;
		&quot;statusFilters&quot;: []&#xd;
	},&#xd;
	&quot;pageIndex&quot;: 1,&#xd;
	&quot;pageSize&quot;: 10,&#xd;
	&quot;sort&quot;: {&#xd;
		&quot;direction&quot;: -1,&#xd;
		&quot;sortBy&quot;: 1,&#xd;
		&quot;displayName&quot;: &quot;New - Old&quot;&#xd;
	},&#xd;
	&quot;tab&quot;: 2&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/pipeline/activities</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_getActivitiesG1" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;group&quot;: 2,&#xd;
	&quot;filter&quot;: {&#xd;
		&quot;keyword&quot;: &quot;&quot;,&#xd;
		&quot;tags&quot;: [],&#xd;
		&quot;office&quot;: &quot;&quot;,&#xd;
		&quot;agent&quot;: &quot;&quot;,&#xd;
		&quot;statusFilters&quot;: []&#xd;
	},&#xd;
	&quot;pageIndex&quot;: 1,&#xd;
	&quot;pageSize&quot;: 10,&#xd;
	&quot;sort&quot;: {&#xd;
		&quot;direction&quot;: -1,&#xd;
		&quot;sortBy&quot;: 1,&#xd;
		&quot;displayName&quot;: &quot;New - Old&quot;&#xd;
	},&#xd;
	&quot;tab&quot;: 2&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/pipeline/activities</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_WorkFlowElevevatedAccess" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/workflow/elevated-access/${dealId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_Save-for-later" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/save-for-later/${dealId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_Status-history" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/status-history/${dealId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_IsPropUnique?" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;dealId&quot;: ${dealId},&#xd;
	&quot;address1&quot;: &quot;&quot;,&#xd;
	&quot;postalCode&quot;: &quot;&quot;,&#xd;
	&quot;propertyType&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/isPropertyUnique</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_Documents?" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/documents?dealId=${dealId}&amp;lifeCycleGroupId=3</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_Legal-documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;dealLifeCycleGroup&quot;: 2,&#xd;
	&quot;administrativeAreaLevelOne&quot;: &quot;${officeCode}&quot;,&#xd;
	&quot;country&quot;: &quot;US&quot;,&#xd;
	&quot;listingOfficeId&quot;: &quot;${officeId}&quot;,&#xd;
	&quot;activityMethodId&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/legal-documents</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="------ Dropdowns ------" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_Agent-Offices" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/agent-offices</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_Auction-platforms" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/auction-platforms</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_Auction-advisors" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/auction-advisors</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_ActivityMethods" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/activity-methods/3</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_property-asset-types" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/property-asset-types</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_brokerage-employees3" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/brokerage-employees/3</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_listing-events" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/listing-events</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_employees-active-status" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/employees-active-status</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_agent-offices" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/agent-offices</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_salutations" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/salutations</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_contacts" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/contacts</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_originators" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/originators</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_client-types" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/client-types</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_party-countries" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/party-countries</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_proposed-finance-categories" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/proposed-finance-categories</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_property-image-types" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/property-image-types</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="------ Upload Documents ------" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_UploadOffMemoDoc" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="C:\Users\julian.restrepob\Documents\offeringMemorandum.docm.pdf" elementType="HTTPFileArg">
                    <stringProp name="File.path">C:\Users\julian.restrepob\Documents\offeringMemorandum.docm.pdf</stringProp>
                    <stringProp name="File.paramname">files</stringProp>
                    <stringProp name="File.mimetype">application/pdf</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/activity-file-storage/document</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetFileId1" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">docFileId1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;fileId&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_UploadRepAgreement" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="C:\Users\julian.restrepob\Documents\Completed listing docs.pdf" elementType="HTTPFileArg">
                    <stringProp name="File.path">C:\Users\julian.restrepob\Documents\Completed listing docs.pdf</stringProp>
                    <stringProp name="File.paramname">files</stringProp>
                    <stringProp name="File.mimetype">application/pdf</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/activity-file-storage/document</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetFileId2" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">docFileId2</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;fileId&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_UploadRepAgreement(staff)" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="C:\Users\julian.restrepob\Documents\Add FIle 1.pdf" elementType="HTTPFileArg">
                    <stringProp name="File.path">C:\Users\julian.restrepob\Documents\Add FIle 1.pdf</stringProp>
                    <stringProp name="File.paramname">files</stringProp>
                    <stringProp name="File.mimetype">application/pdf</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/activity-file-storage/document</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetFileId3" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">docFileId3</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;fileId&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_UploadAucAgreement" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="C:\Users\julian.restrepob\Documents\Auction Agreeemtn new document.pdf" elementType="HTTPFileArg">
                    <stringProp name="File.path">C:\Users\julian.restrepob\Documents\Auction Agreeemtn new document.pdf</stringProp>
                    <stringProp name="File.paramname">files</stringProp>
                    <stringProp name="File.mimetype">application/pdf</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/activity-file-storage/document</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetFileId4" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">docFileId4</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;fileId&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_UploadAdditionalFile" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="C:\Users\julian.restrepob\Documents\Add FIle 2 - Copy.pdf" elementType="HTTPFileArg">
                    <stringProp name="File.path">C:\Users\julian.restrepob\Documents\Add FIle 2 - Copy.pdf</stringProp>
                    <stringProp name="File.paramname">files</stringProp>
                    <stringProp name="File.mimetype">application/pdf</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/activity-file-storage/document-any</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetFileId5" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">docFileId5</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;fileId&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_deals (Submit)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;activityId&quot;: &quot;${activityId}&quot;,&#xd;
	&quot;dealId&quot;: ${dealId},&#xd;
	&quot;dealLifeCycleGroupId&quot;: 3,&#xd;
	&quot;workflowTypeId&quot;: 4,&#xd;
	&quot;dealStatusId&quot;: 4,&#xd;
	&quot;accessControlStatus&quot;: 0,&#xd;
	&quot;sellerInfo&quot;: {&#xd;
		&quot;side&quot;: &quot;L&quot;,&#xd;
		&quot;clients&quot;: [&#xd;
			{&#xd;
				&quot;phone&quot;: &quot;456-120-1921&quot;,&#xd;
				&quot;email&quot;: &quot;Dave_Rowe@gmail.com&quot;,&#xd;
				&quot;isEquityPartner&quot;: null,&#xd;
				&quot;exchangePropertyState&quot;: null,&#xd;
				&quot;firstName&quot;: &quot;Daren&quot;,&#xd;
				&quot;middleName&quot;: &quot;Tomas&quot;,&#xd;
				&quot;lastName&quot;: &quot;King&quot;,&#xd;
				&quot;salutationId&quot;: 17,&#xd;
				&quot;title&quot;: &quot;Global Applications Associate&quot;,&#xd;
				&quot;company&quot;: &quot;Yost Inc&quot;,&#xd;
				&quot;clientTypeId&quot;: 1,&#xd;
				&quot;address1&quot;: &quot;1500 E Medical Center Dr&quot;,&#xd;
				&quot;address2&quot;: &quot;add 2&quot;,&#xd;
				&quot;locality&quot;: &quot;Ann Arbor&quot;,&#xd;
				&quot;administrativeAreaLevelOne&quot;: &quot;MI&quot;,&#xd;
				&quot;postalCode&quot;: &quot;48109&quot;,&#xd;
				&quot;country&quot;: &quot;US&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;majorMarketRivalId&quot;: null&#xd;
	},&#xd;
	&quot;contractInfo&quot;: {&#xd;
		&quot;ipaListing&quot;: false,&#xd;
		&quot;referrals&quot;: [&#xd;
			{&#xd;
				&quot;salutationId&quot;: 4,&#xd;
				&quot;firstName&quot;: &quot;Test REferral&quot;,&#xd;
				&quot;middleName&quot;: &quot;Test REferral&quot;,&#xd;
				&quot;lastName&quot;: &quot;Last Name Text&quot;,&#xd;
				&quot;company&quot;: &quot;Company TEst&quot;,&#xd;
				&quot;title&quot;: &quot;Title...&quot;,&#xd;
				&quot;mmResponsibleForFee&quot;: true,&#xd;
				&quot;commissionResponsibilities&quot;: [&#xd;
					{&#xd;
						&quot;commissionAmount&quot;: 1,&#xd;
						&quot;feeAllocationType&quot;: 2,&#xd;
						&quot;side&quot;: &quot;L&quot;&#xd;
					}&#xd;
				]&#xd;
			}&#xd;
		],&#xd;
		&quot;hasReferrals&quot;: true,&#xd;
		&quot;propertyAssetTypeId&quot;: 1,&#xd;
		&quot;hasRequestForOffer&quot;: null,&#xd;
		&quot;listingPrice&quot;: &quot;400000&quot;,&#xd;
		&quot;activityMethodId&quot;: 1,&#xd;
		&quot;contractDate&quot;: &quot;${today}&quot;,&#xd;
		&quot;contractExpirationDate&quot;: &quot;${todayPlus2}&quot;,&#xd;
		&quot;hasExclusions&quot;: true,&#xd;
		&quot;exclusionsEntity&quot;: &quot;Company Exclusion Test&quot;,&#xd;
		&quot;exclusionsExpiration&quot;: &quot;10-13-2023&quot;,&#xd;
		&quot;listingEventId&quot;: &quot;3&quot;,&#xd;
		&quot;refusals&quot;: [],&#xd;
		&quot;underContractStatusId&quot;: null,&#xd;
		&quot;obstaclesToClose&quot;: null,&#xd;
		&quot;probabilityToCloseId&quot;: null,&#xd;
		&quot;contingencies&quot;: []&#xd;
	},&#xd;
	&quot;feeInfo&quot;: {&#xd;
		&quot;feeAllocationTypeId&quot;: 2,&#xd;
		&quot;sideFeeSplitTypeId&quot;: 2,&#xd;
		&quot;grossCommission&quot;: 3,&#xd;
		&quot;listSideFeeSplit&quot;: 50,&#xd;
		&quot;sellSideFeeSplit&quot;: 50&#xd;
	},&#xd;
	&quot;agentInfo&quot;: {&#xd;
		&quot;officeId&quot;: &quot;996&quot;,&#xd;
		&quot;officeCode&quot;: &quot;CA&quot;,&#xd;
		&quot;pointOfContactUser&quot;: &quot;&quot;,&#xd;
		&quot;feeSplitAllocationTypeId&quot;: 2,&#xd;
		&quot;listingAgents&quot;: [&#xd;
			{&#xd;
				&quot;agentId&quot;: 24783,&#xd;
				&quot;commissionShare&quot;: 100&#xd;
			}&#xd;
		],&#xd;
		&quot;originatorIds&quot;: [&#xd;
			15085&#xd;
		],&#xd;
		&quot;brokerOfRecord&quot;: null&#xd;
	},&#xd;
	&quot;propertyInfo&quot;: {&#xd;
		&quot;propertyName&quot;: &quot;Automate Pipeline JR 2 ${dealId}&quot;,&#xd;
		&quot;commercialSquareFeet&quot;: null,&#xd;
		&quot;residentialSquareFeet&quot;: null,&#xd;
		&quot;address1&quot;: &quot;${address1}&quot;,&#xd;
		&quot;address2&quot;: &quot;&quot;,&#xd;
		&quot;locality&quot;: &quot;${locality}&quot;,&#xd;
		&quot;administrativeAreaLevelOne&quot;: &quot;${officeCode}&quot;,&#xd;
		&quot;postalCode&quot;: &quot;${postalCode}&quot;,&#xd;
		&quot;country&quot;: &quot;US&quot;,&#xd;
		&quot;longitude&quot;: ${longitude},&#xd;
		&quot;latitude&quot;: ${latitude},&#xd;
		&quot;addressCheckServiceId&quot;: 1,&#xd;
		&quot;administrativeAreaLevelTwo&quot;: &quot;${areaLevel2}&quot;,&#xd;
		&quot;portfolioId&quot;: null,&#xd;
		&quot;propertyTypeId&quot;: 2,&#xd;
		&quot;propertySubTypeId&quot;: 2,&#xd;
		&quot;seniorFacilityTypeId&quot;: null,&#xd;
		&quot;strategyTypeId&quot;: null,&#xd;
		&quot;lotSize&quot;: &quot;14&quot;,&#xd;
		&quot;lotSizeUnitOfMeasurement&quot;: 1,&#xd;
		&quot;yearBuilt&quot;: 1950,&#xd;
		&quot;yearLastRenovated&quot;: 1999,&#xd;
		&quot;numUnits&quot;: 3,&#xd;
		&quot;rentableSqFt&quot;: 9,&#xd;
		&quot;grossSqFt&quot;: 12,&#xd;
		&quot;numberOfSuites&quot;: null,&#xd;
		&quot;unitAmenities&quot;: [&#xd;
			&quot;Amenity 1 Text&quot;,&#xd;
			&quot;Amenity Text 2&quot;&#xd;
		],&#xd;
		&quot;facilityAmenities&quot;: [&#xd;
			&quot;Facility Amenity  Text 1&quot;&#xd;
		],&#xd;
		&quot;locationInfo&quot;: null,&#xd;
		&quot;utilityInfo&quot;: {&#xd;
			&quot;waterDescription&quot;: &quot;Water Text&quot;,&#xd;
			&quot;phoneDescription&quot;: &quot;Phone Text&quot;,&#xd;
			&quot;gasDescription&quot;: &quot;Gas Text&quot;,&#xd;
			&quot;electricDescription&quot;: &quot;Electric Text&quot;,&#xd;
			&quot;wiringDescription&quot;: &quot;Wiring Text&quot;,&#xd;
			&quot;heatingCoolingDescription&quot;: &quot;HVAC text&quot;,&#xd;
			&quot;fireProtection&quot;: &quot;Fire Protection Text&quot;&#xd;
		},&#xd;
		&quot;parkingInfo&quot;: {&#xd;
			&quot;numberOfParkingSpots&quot;: &quot;2&quot;,&#xd;
			&quot;parkingRatio&quot;: &quot;12&quot;,&#xd;
			&quot;parkingTypeId&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;buildingStructureInfo&quot;: {&#xd;
			&quot;foundationDescription&quot;: &quot;Foundation Text&quot;,&#xd;
			&quot;framingDescription&quot;: &quot;Framing TExt&quot;,&#xd;
			&quot;roofDescription&quot;: &quot;Roof Text&quot;,&#xd;
			&quot;numberOfStories&quot;: &quot;3&quot;,&#xd;
			&quot;numberOfBuildings&quot;: &quot;2&quot;&#xd;
		},&#xd;
		&quot;exteriorInfo&quot;: {&#xd;
			&quot;landscapingDescription&quot;: &quot;LandScaping Text&quot;,&#xd;
			&quot;topographyDescription&quot;: &quot;Topography Text&quot;,&#xd;
			&quot;exteriorDescription&quot;: &quot;Exterio description area text test !\&quot;#&quot;&#xd;
		},&#xd;
		&quot;buildingMultiTenantInfo&quot;: null,&#xd;
		&quot;constructionInfo&quot;: null&#xd;
	},&#xd;
	&quot;financialInfo&quot;: {&#xd;
		&quot;unitMixes&quot;: [&#xd;
			{&#xd;
				&quot;typeDescription&quot;: &quot;3&quot;,&#xd;
				&quot;typeId&quot;: null,&#xd;
				&quot;amount&quot;: &quot;3&quot;,&#xd;
				&quot;avgUnitRent&quot;: &quot;3&quot;,&#xd;
				&quot;avgUnitSize&quot;: &quot;3&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;customLabelYearOne&quot;: &quot;Current&quot;,&#xd;
		&quot;customLabelYearTwo&quot;: &quot;Pro Forma&quot;,&#xd;
		&quot;downPayment&quot;: &quot;600&quot;,&#xd;
		&quot;loanType&quot;: &quot;1&quot;,&#xd;
		&quot;capOverLease&quot;: null,&#xd;
		&quot;franchiseFee&quot;: null,&#xd;
		&quot;acquisitionCost&quot;: null,&#xd;
		&quot;homeInventoryCost&quot;: null,&#xd;
		&quot;leaseType&quot;: null,&#xd;
		&quot;guarantor&quot;: null,&#xd;
		&quot;saleLeaseback&quot;: null,&#xd;
		&quot;leaseTerm&quot;: null,&#xd;
		&quot;netOperatingIncome&quot;: &quot;9000&quot;,&#xd;
		&quot;capRate&quot;: 10,&#xd;
		&quot;expenses&quot;: &quot;300&quot;,&#xd;
		&quot;debtService&quot;: &quot;12&quot;,&#xd;
		&quot;principalReduction&quot;: &quot;12&quot;,&#xd;
		&quot;totalReturnPercent&quot;: &quot;12&quot;,&#xd;
		&quot;totalReturnAmount&quot;: &quot;12&quot;,&#xd;
		&quot;totalVacancyCost&quot;: &quot;1220&quot;,&#xd;
		&quot;totalOtherIncome&quot;: &quot;120&quot;,&#xd;
		&quot;expenseReimbursement&quot;: null,&#xd;
		&quot;tenantImprovements&quot;: null,&#xd;
		&quot;leasingCommissions&quot;: null,&#xd;
		&quot;occupancy&quot;: &quot;80&quot;,&#xd;
		&quot;grossPotentialRent&quot;: &quot;10033&quot;,&#xd;
		&quot;roomsRevenue&quot;: null,&#xd;
		&quot;revPar&quot;: null,&#xd;
		&quot;grossPotentialHomeRents&quot;: null,&#xd;
		&quot;roomsRevenueMultiplier&quot;: null,&#xd;
		&quot;netOperatingIncomePF&quot;: &quot;8000&quot;,&#xd;
		&quot;capRatePF&quot;: &quot;9&quot;,&#xd;
		&quot;expensesPF&quot;: &quot;200&quot;,&#xd;
		&quot;debtServicePF&quot;: &quot;11&quot;,&#xd;
		&quot;principalReductionPF&quot;: &quot;11&quot;,&#xd;
		&quot;totalReturnPercentPF&quot;: &quot;11&quot;,&#xd;
		&quot;totalReturnAmountPF&quot;: &quot;11&quot;,&#xd;
		&quot;totalVacancyCostPF&quot;: &quot;1200&quot;,&#xd;
		&quot;totalOtherIncomePF&quot;: &quot;133&quot;,&#xd;
		&quot;expenseReimbursementPF&quot;: null,&#xd;
		&quot;tenantImprovementsPF&quot;: null,&#xd;
		&quot;leasingCommissionsPF&quot;: null,&#xd;
		&quot;occupancyPF&quot;: &quot;90&quot;,&#xd;
		&quot;grossPotentialRentPF&quot;: &quot;5000&quot;,&#xd;
		&quot;roomsRevenuePF&quot;: null,&#xd;
		&quot;roomsRevenueMultiplierPF&quot;: null,&#xd;
		&quot;ADRPF&quot;: null,&#xd;
		&quot;revParPF&quot;: null,&#xd;
		&quot;grossPotentialHomeRentsPF&quot;: null,&#xd;
		&quot;buildableUnits&quot;: null,&#xd;
		&quot;developmentType&quot;: null,&#xd;
		&quot;buildableSF&quot;: null,&#xd;
		&quot;numOfLots&quot;: null,&#xd;
		&quot;floorAreaRatio&quot;: null,&#xd;
		&quot;density&quot;: null,&#xd;
		&quot;tenants&quot;: null&#xd;
	},&#xd;
	&quot;marketingInfo&quot;: {&#xd;
		&quot;showOnInternet&quot;: true,&#xd;
		&quot;approvedForPressRelease&quot;: false,&#xd;
		&quot;showPriceOnPressRelease&quot;: null,&#xd;
		&quot;photos&quot;: [&#xd;
			{&#xd;
				&quot;fileId&quot;: &quot;${photoId1}&quot;,&#xd;
				&quot;propertyImageTypeId&quot;: 1,&#xd;
				&quot;propertyImageFileName&quot;: &quot;AutoIMG1.jpg&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;fileId&quot;: &quot;${photoId2}&quot;,&#xd;
				&quot;propertyImageTypeId&quot;: 13,&#xd;
				&quot;propertyImageFileName&quot;: &quot;AutoIMG2.jpg&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;investmentHighlights&quot;: [&#xd;
			&quot;Investment Highlight #1&quot;,&#xd;
			&quot;Investment Highlight #2&quot;,&#xd;
			&quot;Investment Highlight #3&quot;&#xd;
		],&#xd;
		&quot;investmentOverview&quot;: &quot;Investment Overview will be used across all MNet Applications&quot;,&#xd;
		&quot;accessControlStatus&quot;: 0&#xd;
	},&#xd;
	&quot;associatedFiles&quot;: {&#xd;
		&quot;purchaseAndSale&quot;: null,&#xd;
		&quot;additional&quot;: [&#xd;
			{&#xd;
				&quot;userDocumentType&quot;: 4,&#xd;
				&quot;fileId&quot;: &quot;${docFileId5}&quot;,&#xd;
				&quot;fileName&quot;: &quot;Add FIle 2 - Copy.pdf&quot;,&#xd;
				&quot;uploadedDateTime&quot;: null,&#xd;
				&quot;uploadedLifeCycleGroup&quot;: 3&#xd;
			}&#xd;
		],&#xd;
		&quot;executiveSummary&quot;: null,&#xd;
		&quot;memorandum&quot;: {&#xd;
			&quot;fileId&quot;: &quot;${docFileId1}&quot;,&#xd;
			&quot;fileName&quot;: &quot;offeringMemorandum.docm.pdf&quot;,&#xd;
			&quot;uploadedDateTime&quot;: null,&#xd;
			&quot;uploadedLifeCycleGroup&quot;: 3&#xd;
		},&#xd;
		&quot;publicRepAgreement&quot;: {&#xd;
			&quot;fileId&quot;: &quot;${docFileId3}&quot;,&#xd;
			&quot;fileName&quot;: &quot;Add FIle 1.pdf&quot;,&#xd;
			&quot;uploadedDateTime&quot;: null,&#xd;
			&quot;uploadedLifeCycleGroup&quot;: 3&#xd;
		},&#xd;
		&quot;auctionAgreement&quot;: {&#xd;
			&quot;fileId&quot;: &quot;${docFileId4}&quot;,&#xd;
			&quot;fileName&quot;: &quot;Auction Agreeemtn new document.pdf&quot;,&#xd;
			&quot;uploadedDateTime&quot;: null,&#xd;
			&quot;uploadedLifeCycleGroup&quot;: 3&#xd;
		},&#xd;
		&quot;repAgreement&quot;: {&#xd;
			&quot;fileId&quot;: &quot;${docFileId2}&quot;,&#xd;
			&quot;fileName&quot;: &quot;Completed listing docs.pdf&quot;,&#xd;
			&quot;uploadedDateTime&quot;: null,&#xd;
			&quot;uploadedLifeCycleGroup&quot;: 3,&#xd;
			&quot;userDocumentType&quot;: 1&#xd;
		},&#xd;
		&quot;settlementStatement&quot;: null&#xd;
	},&#xd;
	&quot;rcmInfo&quot;: null,&#xd;
	&quot;comparableInfo&quot;: {&#xd;
		&quot;comparables&quot;: []&#xd;
	},&#xd;
	&quot;saleTypeInfo&quot;: {&#xd;
		&quot;saleTypeId&quot;: 2,&#xd;
		&quot;auctionOfferingMethodId&quot;: 2,&#xd;
		&quot;useInternalAuctionConsultant&quot;: true,&#xd;
		&quot;auctionPlatformId&quot;: 1,&#xd;
		&quot;otherAuctionPlatform&quot;: &quot;Other Auction PlatformText&quot;,&#xd;
		&quot;auctionSiteUrl&quot;: &quot;https://Amazon.com/Test/#$%&amp;.com&quot;,&#xd;
		&quot;auctionEndDate&quot;: &quot;10-29-2024&quot;,&#xd;
		&quot;auctionStartDate&quot;: &quot;${today}&quot;,&#xd;
		&quot;startingBid&quot;: 1,&#xd;
		&quot;reservePrice&quot;: 200000.99,&#xd;
		&quot;auctionAdvisors&quot;: [&#xd;
			26660,&#xd;
			26661&#xd;
		]&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_submit" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;dealId&quot;: ${dealId},&#xd;
	&quot;notes&quot;: null,&#xd;
	&quot;type&quot;: 4&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/submit</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_loadActivities" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;group&quot;: 3,&#xd;
	&quot;filter&quot;: {&#xd;
		&quot;keyword&quot;: &quot;&quot;,&#xd;
		&quot;tags&quot;: [],&#xd;
		&quot;office&quot;: &quot;&quot;,&#xd;
		&quot;agent&quot;: &quot;&quot;,&#xd;
		&quot;statusFilters&quot;: []&#xd;
	},&#xd;
	&quot;pageIndex&quot;: 1,&#xd;
	&quot;pageSize&quot;: 10,&#xd;
	&quot;sort&quot;: {&#xd;
		&quot;direction&quot;: -1,&#xd;
		&quot;sortBy&quot;: 1,&#xd;
		&quot;displayName&quot;: &quot;New - Old&quot;&#xd;
	},&#xd;
	&quot;tab&quot;: 2&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/pipeline/activities</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_deals (Submit to Mnet)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;activityId&quot;: &quot;${activityId}&quot;,&#xd;
	&quot;dealId&quot;: ${dealId},&#xd;
	&quot;dealLifeCycleGroupId&quot;: 3,&#xd;
	&quot;workflowTypeId&quot;: 4,&#xd;
	&quot;dealStatusId&quot;: 4,&#xd;
	&quot;accessControlStatus&quot;: 0,&#xd;
	&quot;sellerInfo&quot;: {&#xd;
		&quot;side&quot;: &quot;L&quot;,&#xd;
		&quot;clients&quot;: [&#xd;
			{&#xd;
				&quot;phone&quot;: &quot;456-120-1921&quot;,&#xd;
				&quot;email&quot;: &quot;Dave_Rowe@gmail.com&quot;,&#xd;
				&quot;isEquityPartner&quot;: null,&#xd;
				&quot;exchangePropertyState&quot;: null,&#xd;
				&quot;firstName&quot;: &quot;Daren&quot;,&#xd;
				&quot;middleName&quot;: &quot;Tomas&quot;,&#xd;
				&quot;lastName&quot;: &quot;King&quot;,&#xd;
				&quot;salutationId&quot;: 17,&#xd;
				&quot;title&quot;: &quot;Global Applications Associate&quot;,&#xd;
				&quot;company&quot;: &quot;Yost Inc&quot;,&#xd;
				&quot;clientTypeId&quot;: 1,&#xd;
				&quot;address1&quot;: &quot;1500 E Medical Center Dr&quot;,&#xd;
				&quot;address2&quot;: &quot;add 2&quot;,&#xd;
				&quot;locality&quot;: &quot;Ann Arbor&quot;,&#xd;
				&quot;administrativeAreaLevelOne&quot;: &quot;MI&quot;,&#xd;
				&quot;postalCode&quot;: &quot;48109&quot;,&#xd;
				&quot;country&quot;: &quot;US&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;majorMarketRivalId&quot;: null&#xd;
	},&#xd;
	&quot;contractInfo&quot;: {&#xd;
		&quot;ipaListing&quot;: false,&#xd;
		&quot;referrals&quot;: [&#xd;
			{&#xd;
				&quot;salutationId&quot;: 4,&#xd;
				&quot;firstName&quot;: &quot;Test REferral&quot;,&#xd;
				&quot;middleName&quot;: &quot;Test REferral&quot;,&#xd;
				&quot;lastName&quot;: &quot;Last Name Text&quot;,&#xd;
				&quot;company&quot;: &quot;Company TEst&quot;,&#xd;
				&quot;title&quot;: &quot;Title...&quot;,&#xd;
				&quot;mmResponsibleForFee&quot;: true,&#xd;
				&quot;commissionResponsibilities&quot;: [&#xd;
					{&#xd;
						&quot;commissionAmount&quot;: 1,&#xd;
						&quot;feeAllocationType&quot;: 2,&#xd;
						&quot;side&quot;: &quot;L&quot;&#xd;
					}&#xd;
				]&#xd;
			}&#xd;
		],&#xd;
		&quot;hasReferrals&quot;: true,&#xd;
		&quot;propertyAssetTypeId&quot;: 1,&#xd;
		&quot;hasRequestForOffer&quot;: null,&#xd;
		&quot;listingPrice&quot;: 400000,&#xd;
		&quot;activityMethodId&quot;: 1,&#xd;
		&quot;contractDate&quot;: &quot;${today}&quot;,&#xd;
		&quot;contractExpirationDate&quot;: &quot;${todayPlus2}&quot;,&#xd;
		&quot;hasExclusions&quot;: true,&#xd;
		&quot;variableCommissionSchedule&quot;: {&#xd;
			&quot;variableCommissionScheduleApplies&quot;: false&#xd;
		},&#xd;
		&quot;exclusionsEntity&quot;: &quot;Company Exclusion Test&quot;,&#xd;
		&quot;exclusionsExpiration&quot;: &quot;10-13-2023&quot;,&#xd;
		&quot;listingEventId&quot;: 3,&#xd;
		&quot;refusals&quot;: [],&#xd;
		&quot;underContractStatusId&quot;: null,&#xd;
		&quot;obstaclesToClose&quot;: null,&#xd;
		&quot;probabilityToCloseId&quot;: null,&#xd;
		&quot;contingencies&quot;: []&#xd;
	},&#xd;
	&quot;feeInfo&quot;: {&#xd;
		&quot;feeAllocationTypeId&quot;: 2,&#xd;
		&quot;sideFeeSplitTypeId&quot;: 2,&#xd;
		&quot;grossCommission&quot;: 3,&#xd;
		&quot;listSideFeeSplit&quot;: 50,&#xd;
		&quot;sellSideFeeSplit&quot;: 50&#xd;
	},&#xd;
	&quot;agentInfo&quot;: {&#xd;
		&quot;officeId&quot;: &quot;996&quot;,&#xd;
		&quot;officeCode&quot;: &quot;CA&quot;,&#xd;
						   &#xd;
		&quot;feeSplitAllocationTypeId&quot;: 2,&#xd;
		&quot;listingAgents&quot;: [&#xd;
			{&#xd;
				&quot;agentId&quot;: 24783,&#xd;
				&quot;commissionShare&quot;: 100&#xd;
			}&#xd;
		],&#xd;
		&quot;originatorIds&quot;: [&#xd;
			15085&#xd;
		],&#xd;
		&quot;brokerOfRecord&quot;: null&#xd;
	},&#xd;
	&quot;propertyInfo&quot;: {&#xd;
		&quot;propertyName&quot;: &quot;Automate Pipeline JR 2 ${dealId}&quot;,&#xd;
		&quot;commercialSquareFeet&quot;: null,&#xd;
		&quot;residentialSquareFeet&quot;: null,&#xd;
		&quot;address1&quot;: &quot;${address1}&quot;,&#xd;
		&quot;address2&quot;: &quot;&quot;,&#xd;
		&quot;locality&quot;: &quot;${locality}&quot;,&#xd;
		&quot;administrativeAreaLevelOne&quot;: &quot;${officeCode}&quot;,&#xd;
		&quot;postalCode&quot;: &quot;${postalCode}&quot;,&#xd;
		&quot;country&quot;: &quot;US&quot;,&#xd;
		&quot;longitude&quot;: ${longitude},&#xd;
		&quot;latitude&quot;: ${latitude},&#xd;
		&quot;addressCheckServiceId&quot;: 1,&#xd;
		&quot;administrativeAreaLevelTwo&quot;: &quot;${areaLevel2}&quot;,&#xd;
		&quot;portfolioId&quot;: null,&#xd;
		&quot;propertyTypeId&quot;: 2,&#xd;
		&quot;propertySubTypeId&quot;: 2,&#xd;
		&quot;seniorFacilityTypeId&quot;: null,&#xd;
		&quot;strategyTypeId&quot;: null,&#xd;
		&quot;lotSize&quot;: 14,&#xd;
		&quot;lotSizeUnitOfMeasurement&quot;: 1,&#xd;
		&quot;yearBuilt&quot;: 1950,&#xd;
		&quot;yearLastRenovated&quot;: 1999,&#xd;
		&quot;numUnits&quot;: 3,&#xd;
		&quot;rentableSqFt&quot;: 9,&#xd;
		&quot;grossSqFt&quot;: 12,&#xd;
		&quot;numberOfSuites&quot;: null,&#xd;
		&quot;unitAmenities&quot;: [&#xd;
			&quot;Amenity 1 Text&quot;,&#xd;
			&quot;Amenity Text 2&quot;&#xd;
		],&#xd;
		&quot;facilityAmenities&quot;: [&#xd;
			&quot;Facility Amenity  Text 1&quot;&#xd;
		],&#xd;
		&quot;locationInfo&quot;: null,&#xd;
		&quot;utilityInfo&quot;: {&#xd;
			&quot;waterDescription&quot;: &quot;Water Text&quot;,&#xd;
			&quot;phoneDescription&quot;: &quot;Phone Text&quot;,&#xd;
			&quot;gasDescription&quot;: &quot;Gas Text&quot;,&#xd;
			&quot;electricDescription&quot;: &quot;Electric Text&quot;,&#xd;
			&quot;wiringDescription&quot;: &quot;Wiring Text&quot;,&#xd;
			&quot;heatingCoolingDescription&quot;: &quot;HVAC text&quot;,&#xd;
			&quot;fireProtection&quot;: &quot;Fire Protection Text&quot;&#xd;
		},&#xd;
		&quot;parkingInfo&quot;: {&#xd;
			&quot;numberOfParkingSpots&quot;: 2,&#xd;
			&quot;parkingRatio&quot;: 12,&#xd;
			&quot;parkingTypeId&quot;: 1&#xd;
		},&#xd;
		&quot;buildingStructureInfo&quot;: {&#xd;
			&quot;foundationDescription&quot;: &quot;Foundation Text&quot;,&#xd;
			&quot;framingDescription&quot;: &quot;Framing TExt&quot;,&#xd;
			&quot;roofDescription&quot;: &quot;Roof Text&quot;,&#xd;
			&quot;numberOfStories&quot;: 3,&#xd;
			&quot;numberOfBuildings&quot;: 2&#xd;
		},&#xd;
		&quot;exteriorInfo&quot;: {&#xd;
			&quot;landscapingDescription&quot;: &quot;LandScaping Text&quot;,&#xd;
			&quot;topographyDescription&quot;: &quot;Topography Text&quot;,&#xd;
			&quot;exteriorDescription&quot;: &quot;Exterio description area text test !\&quot;#&quot;&#xd;
		},&#xd;
		&quot;buildingMultiTenantInfo&quot;: null,&#xd;
		&quot;constructionInfo&quot;: null&#xd;
	},&#xd;
	&quot;financialInfo&quot;: {&#xd;
		&quot;unitMixes&quot;: [&#xd;
			{&#xd;
				&quot;typeDescription&quot;: &quot;3&quot;,&#xd;
				&quot;typeId&quot;: null,&#xd;
				&quot;amount&quot;: 3,&#xd;
				&quot;avgUnitRent&quot;: 3,&#xd;
				&quot;avgUnitSize&quot;: 3&#xd;
			}&#xd;
		],&#xd;
		&quot;customLabelYearOne&quot;: &quot;Current&quot;,&#xd;
		&quot;customLabelYearTwo&quot;: &quot;Pro Forma&quot;,&#xd;
		&quot;downPayment&quot;: 600,&#xd;
		&quot;loanType&quot;: 1,&#xd;
		&quot;capOverLease&quot;: null,&#xd;
		&quot;franchiseFee&quot;: null,&#xd;
		&quot;acquisitionCost&quot;: null,&#xd;
		&quot;homeInventoryCost&quot;: null,&#xd;
		&quot;leaseType&quot;: null,&#xd;
		&quot;guarantor&quot;: null,&#xd;
		&quot;saleLeaseback&quot;: null,&#xd;
		&quot;leaseTerm&quot;: null,&#xd;
		&quot;netOperatingIncome&quot;: 9000,&#xd;
		&quot;capRate&quot;: 10,&#xd;
		&quot;expenses&quot;: -300,&#xd;
		&quot;debtService&quot;: 12,&#xd;
		&quot;principalReduction&quot;: 12,&#xd;
		&quot;totalReturnPercent&quot;: 12,&#xd;
		&quot;totalReturnAmount&quot;: 12,&#xd;
		&quot;totalVacancyCost&quot;: 1220,&#xd;
		&quot;totalOtherIncome&quot;: 120,&#xd;
		&quot;expenseReimbursement&quot;: null,&#xd;
		&quot;tenantImprovements&quot;: null,&#xd;
		&quot;leasingCommissions&quot;: null,&#xd;
		&quot;occupancy&quot;: 80,&#xd;
		&quot;grossPotentialRent&quot;: 10033,&#xd;
		&quot;roomsRevenue&quot;: null,&#xd;
		&quot;revPar&quot;: null,&#xd;
		&quot;grossPotentialHomeRents&quot;: null,&#xd;
		&quot;roomsRevenueMultiplier&quot;: null,&#xd;
		&quot;netOperatingIncomePF&quot;: 8000,&#xd;
		&quot;capRatePF&quot;: 9,&#xd;
		&quot;expensesPF&quot;: -200,&#xd;
		&quot;debtServicePF&quot;: 11,&#xd;
		&quot;principalReductionPF&quot;: 11,&#xd;
		&quot;totalReturnPercentPF&quot;: 11,&#xd;
		&quot;totalReturnAmountPF&quot;: 11,&#xd;
		&quot;totalVacancyCostPF&quot;: 1200,&#xd;
		&quot;totalOtherIncomePF&quot;: 133,&#xd;
		&quot;expenseReimbursementPF&quot;: null,&#xd;
		&quot;tenantImprovementsPF&quot;: null,&#xd;
		&quot;leasingCommissionsPF&quot;: null,&#xd;
		&quot;occupancyPF&quot;: 90,&#xd;
		&quot;grossPotentialRentPF&quot;: 5000,&#xd;
		&quot;roomsRevenuePF&quot;: null,&#xd;
		&quot;roomsRevenueMultiplierPF&quot;: null,&#xd;
		&quot;ADRPF&quot;: null,&#xd;
		&quot;revParPF&quot;: null,&#xd;
		&quot;grossPotentialHomeRentsPF&quot;: null,&#xd;
		&quot;buildableUnits&quot;: null,&#xd;
		&quot;developmentType&quot;: null,&#xd;
		&quot;buildableSF&quot;: null,&#xd;
		&quot;numOfLots&quot;: null,&#xd;
		&quot;floorAreaRatio&quot;: null,&#xd;
		&quot;density&quot;: null,&#xd;
		&quot;tenants&quot;: null&#xd;
	},&#xd;
	&quot;marketingInfo&quot;: {&#xd;
		&quot;showOnInternet&quot;: true,&#xd;
		&quot;approvedForPressRelease&quot;: false,&#xd;
		&quot;showPriceOnPressRelease&quot;: null,&#xd;
		&quot;photos&quot;: [&#xd;
			{&#xd;
				&quot;fileId&quot;: &quot;${photoId1}&quot;,&#xd;
				&quot;propertyImageTypeId&quot;: 1,&#xd;
				&quot;propertyImageFileName&quot;: &quot;AutoIMG1.jpg&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;fileId&quot;: &quot;${photoId2}&quot;,&#xd;
				&quot;propertyImageTypeId&quot;: 13,&#xd;
				&quot;propertyImageFileName&quot;: &quot;AutoIMG2.jpg&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;investmentHighlights&quot;: [&#xd;
			&quot;Investment Highlight #1&quot;,&#xd;
			&quot;Investment Highlight #2&quot;,&#xd;
			&quot;Investment Highlight #3&quot;&#xd;
		],&#xd;
		&quot;investmentOverview&quot;: &quot;Investment Overview will be used across all MNet Applications&quot;,&#xd;
		&quot;accessControlStatus&quot;: 0&#xd;
	},&#xd;
	&quot;associatedFiles&quot;: {&#xd;
		&quot;purchaseAndSale&quot;: null,&#xd;
		&quot;additional&quot;: [&#xd;
			{&#xd;
				&quot;userDocumentType&quot;: 4,&#xd;
				&quot;fileId&quot;: &quot;${docFileId5}&quot;,&#xd;
				&quot;fileName&quot;: &quot;Add FIle 2 - Copy.pdf&quot;,&#xd;
				&quot;uploadedDateTime&quot;: null,&#xd;
				&quot;uploadedLifeCycleGroup&quot;: 3&#xd;
			}&#xd;
		],&#xd;
		&quot;executiveSummary&quot;: null,&#xd;
		&quot;memorandum&quot;: {&#xd;
			&quot;fileId&quot;: &quot;${docFileId1}&quot;,&#xd;
			&quot;fileName&quot;: &quot;offeringMemorandum.docm.pdf&quot;,&#xd;
			&quot;uploadedDateTime&quot;: null,&#xd;
			&quot;uploadedLifeCycleGroup&quot;: 3&#xd;
		},&#xd;
		&quot;publicRepAgreement&quot;: {&#xd;
			&quot;fileId&quot;: &quot;${docFileId3}&quot;,&#xd;
			&quot;fileName&quot;: &quot;Add FIle 1.pdf&quot;,&#xd;
			&quot;uploadedDateTime&quot;: null,&#xd;
			&quot;uploadedLifeCycleGroup&quot;: 3&#xd;
		},&#xd;
		&quot;auctionAgreement&quot;: {&#xd;
			&quot;fileId&quot;: &quot;${docFileId4}&quot;,&#xd;
			&quot;fileName&quot;: &quot;Auction Agreeemtn new document.pdf&quot;,&#xd;
			&quot;uploadedDateTime&quot;: null,&#xd;
			&quot;uploadedLifeCycleGroup&quot;: 3&#xd;
		},&#xd;
		&quot;repAgreement&quot;: {&#xd;
			&quot;fileId&quot;: &quot;${docFileId2}&quot;,&#xd;
			&quot;fileName&quot;: &quot;Completed listing docs.pdf&quot;,&#xd;
			&quot;uploadedDateTime&quot;: null,&#xd;
			&quot;uploadedLifeCycleGroup&quot;: 3,&#xd;
			&quot;userDocumentType&quot;: 1&#xd;
		},&#xd;
		&quot;settlementStatement&quot;: null&#xd;
	},&#xd;
	&quot;rcmInfo&quot;: null,&#xd;
	&quot;comparableInfo&quot;: {&#xd;
		&quot;comparables&quot;: []&#xd;
	},&#xd;
	&quot;saleTypeInfo&quot;: {&#xd;
		&quot;saleTypeId&quot;: 2,&#xd;
		&quot;auctionOfferingMethodId&quot;: 2,&#xd;
		&quot;useInternalAuctionConsultant&quot;: true,&#xd;
		&quot;auctionPlatformId&quot;: 1,&#xd;
		&quot;otherAuctionPlatform&quot;: &quot;Other Auction PlatformText&quot;,&#xd;
		&quot;auctionSiteUrl&quot;: &quot;https://Amazon.com/Test/#$%&amp;.com&quot;,&#xd;
		&quot;auctionEndDate&quot;: &quot;10-29-2024&quot;,&#xd;
		&quot;auctionStartDate&quot;: &quot;${today}&quot;,&#xd;
		&quot;startingBid&quot;: 1,&#xd;
		&quot;reservePrice&quot;: 200000.99,&#xd;
		&quot;auctionAdvisors&quot;: [&#xd;
			26660,&#xd;
			26661&#xd;
		]&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_submit to Mnet" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;dealId&quot;: ${dealId},&#xd;
	&quot;notes&quot;: null,&#xd;
	&quot;type&quot;: 4&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/submit</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_loadActivities" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;group&quot;: 3,&#xd;
	&quot;filter&quot;: {&#xd;
		&quot;keyword&quot;: &quot;&quot;,&#xd;
		&quot;tags&quot;: [],&#xd;
		&quot;office&quot;: &quot;&quot;,&#xd;
		&quot;agent&quot;: &quot;&quot;,&#xd;
		&quot;statusFilters&quot;: []&#xd;
	},&#xd;
	&quot;pageIndex&quot;: 1,&#xd;
	&quot;pageSize&quot;: 10,&#xd;
	&quot;sort&quot;: {&#xd;
		&quot;direction&quot;: -1,&#xd;
		&quot;sortBy&quot;: 1,&#xd;
		&quot;displayName&quot;: &quot;New - Old&quot;&#xd;
	},&#xd;
	&quot;tab&quot;: 2&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/pipeline/activities</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="4. ------ Move to Under Contract and Submit" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_Transition" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/transition/${dealId}/3/4</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_getActivityId" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/pipeline/activity/${dealId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetActivityId2" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">activityId2</stringProp>
              <stringProp name="RegexExtractor.regex">,&quot;activityId&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Test Verify Activity and dealID" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script"></stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_WorkFlowElevevatedAccess" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/workflow/elevated-access/${dealId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_Save-for-later" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/save-for-later/${dealId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_Status-history" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/status-history/${dealId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_Documents?" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/documents?dealId=${dealId}&amp;lifeCycleGroupId=4</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_IsPropUnique?" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;dealId&quot;: ${dealId},&#xd;
	&quot;address1&quot;: &quot;&quot;,&#xd;
	&quot;postalCode&quot;: &quot;&quot;,&#xd;
	&quot;propertyType&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/isPropertyUnique</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_IsPropUnique?2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;dealId&quot;: ${dealId},&#xd;
	&quot;address1&quot;: &quot;&quot;,&#xd;
	&quot;postalCode&quot;: &quot;${postalCode}&quot;,&#xd;
	&quot;propertyType&quot;: 2&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/isPropertyUnique</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_Legal-documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;dealLifeCycleGroup&quot;: 4,&#xd;
	&quot;administrativeAreaLevelOne&quot;: &quot;${officeCode}&quot;,&#xd;
	&quot;country&quot;: &quot;US&quot;,&#xd;
	&quot;listingOfficeId&quot;: &quot;${officeId}&quot;,&#xd;
	&quot;activityMethodId&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/legal-documents</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="------ Dropdowns ------" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_under-contract-statuses" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/dropdowns/under-contract-statuses/4/7</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_contingency-cateogories" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/contingency-categories</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_Auction-platforms" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/auction-platforms</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_Auction-advisors" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/auction-advisors</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_client-types" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/client-types</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_salutations" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/salutations</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_contacts" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/contacts</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_party-countries" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/party-countries</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_brokerage-employees4" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/brokerage-employees/4</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_sips" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/sips</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_originators" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/originators</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_property-asset-types" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/property-asset-types</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_property-image-types" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/property-image-types</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="------ Upload Documents ------" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_UploadPurchaseSaleAgree" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="C:\Users\julian.restrepob\Documents\Purchase Agreement Doc.pdf" elementType="HTTPFileArg">
                    <stringProp name="File.path">C:\Users\julian.restrepob\Documents\Purchase Agreement Doc.pdf</stringProp>
                    <stringProp name="File.paramname">files</stringProp>
                    <stringProp name="File.mimetype">application/pdf</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/activity-file-storage/document</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetFileId6" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">docFileId6</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;fileId&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_deals (Submit)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;activityId&quot;: &quot;${activityId}&quot;,&#xd;
	&quot;dealId&quot;: ${dealId},&#xd;
	&quot;dealLifeCycleGroupId&quot;: 4,&#xd;
	&quot;workflowTypeId&quot;: 4,&#xd;
	&quot;accessControlStatus&quot;: 0,&#xd;
	&quot;buyerInfo&quot;: {&#xd;
		&quot;side&quot;: &quot;S&quot;,&#xd;
		&quot;clients&quot;: [&#xd;
			{&#xd;
				&quot;phone&quot;: &quot;3333333&quot;,&#xd;
				&quot;email&quot;: &quot;testmail@testmail.mail&quot;,&#xd;
				&quot;isEquityPartner&quot;: false,&#xd;
				&quot;exchangePropertyState&quot;: null,&#xd;
				&quot;firstName&quot;: &quot;FirstTest &quot;,&#xd;
				&quot;middleName&quot;: &quot;Test&quot;,&#xd;
				&quot;lastName&quot;: &quot;Test&quot;,&#xd;
				&quot;salutationId&quot;: 17,&#xd;
				&quot;title&quot;: &quot;Test&quot;,&#xd;
				&quot;company&quot;: &quot;Cpmpany Test&quot;,&#xd;
				&quot;clientTypeId&quot;: 1,&#xd;
				&quot;address1&quot;: &quot;124 Eglinton Ave W&quot;,&#xd;
				&quot;address2&quot;: &quot;&quot;,&#xd;
				&quot;locality&quot;: &quot;Toronto&quot;,&#xd;
				&quot;administrativeAreaLevelOne&quot;: &quot;ON&quot;,&#xd;
				&quot;postalCode&quot;: &quot;M4R 2G8&quot;,&#xd;
				&quot;country&quot;: &quot;CA&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;majorMarketRivalId&quot;: null&#xd;
	},&#xd;
	&quot;contractInfo&quot;: {&#xd;
		&quot;hasContingencies&quot;: true,&#xd;
		&quot;referrals&quot;: [&#xd;
			{&#xd;
				&quot;salutationId&quot;: 4,&#xd;
				&quot;firstName&quot;: &quot;Test REferral&quot;,&#xd;
				&quot;middleName&quot;: &quot;Test REferral&quot;,&#xd;
				&quot;lastName&quot;: &quot;Last Name Text&quot;,&#xd;
				&quot;company&quot;: &quot;Company TEst&quot;,&#xd;
				&quot;title&quot;: &quot;Title...&quot;,&#xd;
				&quot;isBroker&quot;: true,&#xd;
				&quot;mmResponsibleForFee&quot;: true,&#xd;
				&quot;commissionResponsibilities&quot;: [&#xd;
					{&#xd;
						&quot;commissionAmount&quot;: 1,&#xd;
						&quot;feeAllocationType&quot;: 2,&#xd;
						&quot;side&quot;: &quot;L&quot;&#xd;
					}&#xd;
				]&#xd;
			}&#xd;
		],&#xd;
		&quot;hasReferrals&quot;: true,&#xd;
		&quot;propertyAssetTypeId&quot;: null,&#xd;
		&quot;hasRequestForOffer&quot;: null,&#xd;
		&quot;listingPrice&quot;: null,&#xd;
		&quot;activityMethodId&quot;: 1,&#xd;
		&quot;contractDate&quot;: &quot;${today}&quot;,&#xd;
		&quot;hasExclusions&quot;: null,&#xd;
		&quot;exclusionsEntity&quot;: null,&#xd;
		&quot;listingEventId&quot;: null,&#xd;
		&quot;refusals&quot;: [],&#xd;
		&quot;dateSigned&quot;: &quot;${today}&quot;,&#xd;
		&quot;projectedSettlementDate&quot;: &quot;${today}&quot;,&#xd;
		&quot;contractSettlementDate&quot;: &quot;${today}&quot;,&#xd;
		&quot;underContractStatusId&quot;: 7,&#xd;
		&quot;obstaclesToClose&quot;: &quot;Obstacles to CLose Text&quot;,&#xd;
		&quot;probabilityToCloseId&quot;: 2,&#xd;
		&quot;contingencies&quot;: [&#xd;
			{&#xd;
				&quot;categoryId&quot;: 13,&#xd;
				&quot;customContingency&quot;: &quot;Other Info TExt&quot;,&#xd;
				&quot;contingencyDueDate&quot;: &quot;${today}&quot;,&#xd;
				&quot;contingencyRemovedDate&quot;: &quot;${today}&quot;&#xd;
			}&#xd;
		]&#xd;
	},&#xd;
	&quot;propertyInfo&quot;: {&#xd;
		&quot;propertyName&quot;: &quot;Automate Pipeline JR 2 ${dealId}&quot;,&#xd;
		&quot;commercialSquareFeet&quot;: null,&#xd;
		&quot;residentialSquareFeet&quot;: null,&#xd;
		&quot;address1&quot;: &quot;&quot;,&#xd;
		&quot;address2&quot;: &quot;&quot;,&#xd;
		&quot;locality&quot;: &quot;&quot;,&#xd;
		&quot;administrativeAreaLevelOne&quot;: &quot;${officeCode}&quot;,&#xd;
		&quot;postalCode&quot;: &quot;${postalCode}&quot;,&#xd;
		&quot;country&quot;: &quot;US&quot;,&#xd;
		&quot;longitude&quot;: 0,&#xd;
		&quot;latitude&quot;: 0,&#xd;
		&quot;addressCheckServiceId&quot;: 0,&#xd;
		&quot;administrativeAreaLevelTwo&quot;: &quot;&quot;,&#xd;
		&quot;portfolioId&quot;: null,&#xd;
		&quot;propertyTypeId&quot;: 2,&#xd;
		&quot;propertySubTypeId&quot;: 2,&#xd;
		&quot;seniorFacilityTypeId&quot;: null,&#xd;
		&quot;strategyTypeId&quot;: null,&#xd;
		&quot;lotSize&quot;: null,&#xd;
		&quot;lotSizeUnitOfMeasurement&quot;: 1,&#xd;
		&quot;yearBuilt&quot;: null,&#xd;
		&quot;yearLastRenovated&quot;: null,&#xd;
		&quot;numUnits&quot;: null,&#xd;
		&quot;rentableSqFt&quot;: null,&#xd;
		&quot;grossSqFt&quot;: null,&#xd;
		&quot;numberOfSuites&quot;: null&#xd;
	},&#xd;
	&quot;marketingInfo&quot;: {&#xd;
		&quot;photos&quot;: [&#xd;
			{&#xd;
				&quot;fileId&quot;: &quot;${photoId1}&quot;,&#xd;
				&quot;propertyImageTypeId&quot;: 1,&#xd;
				&quot;propertyImageFileName&quot;: &quot;AutoIMG1.jpg&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;fileId&quot;: &quot;${photoId2}&quot;,&#xd;
				&quot;propertyImageTypeId&quot;: 13,&#xd;
				&quot;propertyImageFileName&quot;: &quot;AutoIMG2.jpg&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;showOnInternet&quot;: true,&#xd;
		&quot;exportToCoStar&quot;: false,&#xd;
		&quot;approvedForPressRelease&quot;: false,&#xd;
		&quot;showPriceOnPressRelease&quot;: false,&#xd;
		&quot;accessControlStatus&quot;: 0&#xd;
	},&#xd;
	&quot;teamInfo&quot;: {&#xd;
		&quot;purchasePrice&quot;: 400000,&#xd;
		&quot;referrals&quot;: [&#xd;
			{&#xd;
				&quot;salutationId&quot;: 4,&#xd;
				&quot;firstName&quot;: &quot;Test REferral&quot;,&#xd;
				&quot;middleName&quot;: &quot;Test REferral&quot;,&#xd;
				&quot;lastName&quot;: &quot;Last Name Text&quot;,&#xd;
				&quot;company&quot;: &quot;Company TEst&quot;,&#xd;
				&quot;title&quot;: &quot;Title...&quot;,&#xd;
				&quot;isBroker&quot;: true,&#xd;
				&quot;mmResponsibleForFee&quot;: true,&#xd;
				&quot;commissionResponsibilities&quot;: [&#xd;
					{&#xd;
						&quot;commissionAmount&quot;: 1,&#xd;
						&quot;feeAllocationType&quot;: 2,&#xd;
						&quot;side&quot;: &quot;L&quot;&#xd;
					}&#xd;
				]&#xd;
			}&#xd;
		],&#xd;
		&quot;hasReferral&quot;: true,&#xd;
		&quot;coopAgents&quot;: [],&#xd;
		&quot;hasCoopAgent&quot;: false,&#xd;
		&quot;listingAgentFeesInDollars&quot;: false,&#xd;
		&quot;listingTeam&quot;: [&#xd;
			{&#xd;
				&quot;agentId&quot;: 24783,&#xd;
				&quot;feeAmount&quot;: 100,&#xd;
				&quot;sips&quot;: [],&#xd;
				&quot;revenueOffices&quot;: [&#xd;
					{&#xd;
						&quot;amount&quot;: 1,&#xd;
						&quot;officeId&quot;: &quot;003&quot;&#xd;
					}&#xd;
				]&#xd;
			}&#xd;
		],&#xd;
		&quot;sellingAgentFeesInDollars&quot;: false,&#xd;
		&quot;sellingTeam&quot;: [&#xd;
			{&#xd;
				&quot;agentId&quot;: 2981,&#xd;
				&quot;feeAmount&quot;: 100,&#xd;
				&quot;sips&quot;: [],&#xd;
				&quot;revenueOffices&quot;: []&#xd;
			}&#xd;
		]&#xd;
	},&#xd;
	&quot;feeInfo&quot;: {&#xd;
		&quot;feeAllocationTypeId&quot;: 2,&#xd;
		&quot;sideFeeSplitTypeId&quot;: 2,&#xd;
		&quot;grossCommission&quot;: 3,&#xd;
		&quot;listSideFeeSplit&quot;: 50,&#xd;
		&quot;sellSideFeeSplit&quot;: 50&#xd;
	},&#xd;
	&quot;associatedFiles&quot;: {&#xd;
		&quot;additional&quot;: [&#xd;
			{&#xd;
				&quot;userDocumentType&quot;: 4,&#xd;
				&quot;fileId&quot;: &quot;${docFileId5}&quot;,&#xd;
				&quot;fileName&quot;: &quot;Add FIle 2 - Copy.pdf&quot;,&#xd;
				&quot;uploadedDateTime&quot;: null,&#xd;
				&quot;uploadedLifeCycleGroup&quot;: 3&#xd;
			}&#xd;
		],&#xd;
		&quot;memorandum&quot;: null,&#xd;
		&quot;executiveSummary&quot;: null,&#xd;
		&quot;publicRepAgreement&quot;: null,&#xd;
		&quot;auctionAgreement&quot;: null,&#xd;
		&quot;repAgreement&quot;: null,&#xd;
		&quot;purchaseAndSale&quot;: {&#xd;
			&quot;fileId&quot;: &quot;${docFileId6}&quot;,&#xd;
			&quot;fileName&quot;: &quot;Purchase Agreement Doc.pdf&quot;,&#xd;
			&quot;uploadedDateTime&quot;: null,&#xd;
			&quot;uploadedLifeCycleGroup&quot;: 4,&#xd;
			&quot;userDocumentType&quot;: 2&#xd;
		},&#xd;
		&quot;settlementStatement&quot;: null&#xd;
	},&#xd;
	&quot;agentInfo&quot;: {&#xd;
		&quot;officeId&quot;: &quot;${officeId}&quot;,&#xd;
		&quot;officeCode&quot;: &quot;${officeCode}&quot;,&#xd;
		&quot;feeSplitAllocationTypeId&quot;: 2,&#xd;
		&quot;listingAgents&quot;: [&#xd;
			{&#xd;
				&quot;agentId&quot;: 24783,&#xd;
				&quot;commissionShare&quot;: 100&#xd;
			}&#xd;
		],&#xd;
		&quot;originatorIds&quot;: [&#xd;
			15085&#xd;
		],&#xd;
		&quot;brokerOfRecord&quot;: null&#xd;
	},&#xd;
	&quot;closingStatistics&quot;: {&#xd;
		&quot;numOffers&quot;: null,&#xd;
		&quot;offerors&quot;: [],&#xd;
		&quot;confidentialityAgreements&quot;: null,&#xd;
		&quot;tours&quot;: null&#xd;
	},&#xd;
	&quot;saleTypeInfo&quot;: {&#xd;
		&quot;saleTypeId&quot;: 2,&#xd;
		&quot;auctionOfferingMethodId&quot;: 2,&#xd;
		&quot;useInternalAuctionConsultant&quot;: true,&#xd;
		&quot;auctionPlatformId&quot;: 1,&#xd;
		&quot;otherAuctionPlatform&quot;: &quot;Other Auction PlatformText&quot;,&#xd;
		&quot;auctionSiteUrl&quot;: &quot;https://Amazon.com/Test/#$%&amp;.com&quot;,&#xd;
		&quot;auctionEndDate&quot;: &quot;10-29-2024&quot;,&#xd;
		&quot;auctionStartDate&quot;: &quot;${today}&quot;,&#xd;
		&quot;startingBid&quot;: 1,&#xd;
		&quot;reservePrice&quot;: 200000.99,&#xd;
		&quot;auctionAdvisors&quot;: [&#xd;
			26660,&#xd;
			26661&#xd;
		]&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_submit" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;dealId&quot;: ${dealId},&#xd;
	&quot;notes&quot;: null,&#xd;
	&quot;type&quot;: 4&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/submit</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC_loadActivities" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;group&quot;: 4,&#xd;
	&quot;filter&quot;: {&#xd;
		&quot;keyword&quot;: &quot;&quot;,&#xd;
		&quot;tags&quot;: [],&#xd;
		&quot;office&quot;: &quot;&quot;,&#xd;
		&quot;agent&quot;: &quot;&quot;,&#xd;
		&quot;statusFilters&quot;: []&#xd;
	},&#xd;
	&quot;pageIndex&quot;: 1,&#xd;
	&quot;pageSize&quot;: 10,&#xd;
	&quot;sort&quot;: {&#xd;
		&quot;direction&quot;: -1,&#xd;
		&quot;sortBy&quot;: 1,&#xd;
		&quot;displayName&quot;: &quot;New - Old&quot;&#xd;
	},&#xd;
	&quot;tab&quot;: 2&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/pipeline/activities</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="5. ------ Move to Closed and Submit" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Closed_Transition" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/transition/${dealId}/4/5</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Closed_getActivityId" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/pipeline/activity/${dealId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetActivityId2" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">activityId2</stringProp>
              <stringProp name="RegexExtractor.regex">,&quot;activityId&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Test Verify Activity and dealID" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script"></stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Closed_WorkFlowElevevatedAccess" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/workflow/elevated-access/${dealId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_getActivitiesG1" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;group&quot;: 4,&#xd;
	&quot;filter&quot;: {&#xd;
		&quot;keyword&quot;: &quot;&quot;,&#xd;
		&quot;tags&quot;: [],&#xd;
		&quot;office&quot;: &quot;&quot;,&#xd;
		&quot;agent&quot;: &quot;&quot;,&#xd;
		&quot;statusFilters&quot;: []&#xd;
	},&#xd;
	&quot;pageIndex&quot;: 1,&#xd;
	&quot;pageSize&quot;: 10,&#xd;
	&quot;sort&quot;: {&#xd;
		&quot;direction&quot;: -1,&#xd;
		&quot;sortBy&quot;: 1,&#xd;
		&quot;displayName&quot;: &quot;New - Old&quot;&#xd;
	},&#xd;
	&quot;tab&quot;: 2&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/pipeline/activities</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_getActivitiesG2" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;group&quot;: 5,&#xd;
	&quot;filter&quot;: {&#xd;
		&quot;keyword&quot;: &quot;&quot;,&#xd;
		&quot;tags&quot;: [],&#xd;
		&quot;office&quot;: &quot;&quot;,&#xd;
		&quot;agent&quot;: &quot;&quot;,&#xd;
		&quot;statusFilters&quot;: []&#xd;
	},&#xd;
	&quot;pageIndex&quot;: 1,&#xd;
	&quot;pageSize&quot;: 10,&#xd;
	&quot;sort&quot;: {&#xd;
		&quot;direction&quot;: -1,&#xd;
		&quot;sortBy&quot;: 1,&#xd;
		&quot;displayName&quot;: &quot;New - Old&quot;&#xd;
	},&#xd;
	&quot;tab&quot;: 2&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/pipeline/activities</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Closed_Save-for-later" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/save-for-later/${dealId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Closed_Status-history" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/status-history/${dealId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Closed_Documents?" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/documents?dealId=${dealId}&amp;lifeCycleGroupId=5</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Closed_IsPropUnique?" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;dealId&quot;: ${dealId},&#xd;
	&quot;address1&quot;: &quot;&quot;,&#xd;
	&quot;postalCode&quot;: &quot;&quot;,&#xd;
	&quot;propertyType&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/isPropertyUnique</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Closed_can Submit to Accounting" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/can-submit-to-accounting/${dealId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="------ Dropdowns ------" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Closed_salutations" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/salutations</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Closed_party-countries" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/party-countries</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Closed_contacts" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/contacts</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Closed_client-types" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/client-types</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Close_Auction-platforms" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/auction-platforms</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Closed_Auction-advisors" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/auction-advisors</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Closed_sips" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/sips</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Closed_brokerage-employees5" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/brokerage-employees/5</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Closed_originators" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/originators</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Closed_financing-lenders" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/financing-lenders</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Closed_IsPropUnique?2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;dealId&quot;: ${dealId},&#xd;
	&quot;address1&quot;: &quot;&quot;,&#xd;
	&quot;postalCode&quot;: &quot;${postalCode}&quot;,&#xd;
	&quot;propertyType&quot;: 2&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/isPropertyUnique</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Closed_Legal-documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;dealLifeCycleGroup&quot;: 5,&#xd;
	&quot;administrativeAreaLevelOne&quot;: &quot;${officeCode}&quot;,&#xd;
	&quot;country&quot;: &quot;US&quot;,&#xd;
	&quot;listingOfficeId&quot;: &quot;${officeId}&quot;,&#xd;
	&quot;activityMethodId&quot;: 1&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/legal-documents</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="------ Upload Documents ------" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Closed_UploadPurchaseSaleAgree" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="C:\Users\julian.restrepob\Documents\SettlementStatementdoc.pdf" elementType="HTTPFileArg">
                    <stringProp name="File.path">C:\Users\julian.restrepob\Documents\SettlementStatementdoc.pdf</stringProp>
                    <stringProp name="File.paramname">files</stringProp>
                    <stringProp name="File.mimetype">application/pdf</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/activity-file-storage/document</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetFileId7" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">docFileId7</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;fileId&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Closed_deals (Submit)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;activityId&quot;: &quot;${activityId}&quot;,&#xd;
	&quot;dealId&quot;: ${dealId},&#xd;
	&quot;dealLifeCycleGroupId&quot;: 5,&#xd;
	&quot;dealStatusId&quot;: 4,&#xd;
	&quot;workflowTypeId&quot;: 4,&#xd;
	&quot;accessControlStatus&quot;: 0,&#xd;
	&quot;agentInfo&quot;: {&#xd;
		&quot;officeId&quot;: &quot;${postalCode}&quot;,&#xd;
		&quot;officeCode&quot;: &quot;${officeCode}&quot;,&#xd;
		&quot;feeSplitAllocationTypeId&quot;: 2,&#xd;
		&quot;listingAgents&quot;: [&#xd;
			{&#xd;
				&quot;agentId&quot;: 24783,&#xd;
				&quot;commissionShare&quot;: 100&#xd;
			}&#xd;
		],&#xd;
		&quot;originatorIds&quot;: [&#xd;
			15085&#xd;
		],&#xd;
		&quot;brokerOfRecord&quot;: null&#xd;
	},&#xd;
	&quot;buyerInfo&quot;: {&#xd;
		&quot;side&quot;: &quot;S&quot;,&#xd;
		&quot;clients&quot;: [&#xd;
			{&#xd;
				&quot;phone&quot;: &quot;3333333&quot;,&#xd;
				&quot;email&quot;: &quot;testmail@testmail.mail&quot;,&#xd;
				&quot;legalOwner&quot;: null,&#xd;
				&quot;isEquityPartner&quot;: null,&#xd;
				&quot;isExchange&quot;: false,&#xd;
				&quot;exchangePropertyState&quot;: null,&#xd;
				&quot;firstName&quot;: &quot;FirstTest&quot;,&#xd;
				&quot;middleName&quot;: &quot;Test&quot;,&#xd;
				&quot;lastName&quot;: &quot;Test&quot;,&#xd;
				&quot;salutationId&quot;: 17,&#xd;
				&quot;title&quot;: &quot;Test&quot;,&#xd;
				&quot;company&quot;: &quot;Cpmpany Test&quot;,&#xd;
				&quot;clientTypeId&quot;: 1,&#xd;
				&quot;address1&quot;: &quot;124 Eglinton Ave W&quot;,&#xd;
				&quot;address2&quot;: &quot;&quot;,&#xd;
				&quot;locality&quot;: &quot;Toronto&quot;,&#xd;
				&quot;administrativeAreaLevelOne&quot;: &quot;ON&quot;,&#xd;
				&quot;postalCode&quot;: &quot;M4R 2G8&quot;,&#xd;
				&quot;country&quot;: &quot;CA&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;majorMarketRivalId&quot;: null&#xd;
	},&#xd;
	&quot;closingInfo&quot;: {&#xd;
		&quot;dateContractSigned&quot;: {&#xd;
			&quot;year&quot;: ${year},&#xd;
			&quot;month&quot;: ${month},&#xd;
			&quot;day&quot;: ${day}&#xd;
		},&#xd;
		&quot;closingPrice&quot;: 400000,&#xd;
		&quot;settlementDate&quot;: &quot;${today}&quot;,&#xd;
		&quot;purchaseFinancingTypeId&quot;: 2,&#xd;
		&quot;commissionsAccountingNotes&quot;: &quot;Accounting note test&quot;,&#xd;
		&quot;lenderId&quot;: 301,&#xd;
		&quot;downPayment&quot;: &quot;75000&quot;,&#xd;
		&quot;loanAmount&quot;: &quot;850000&quot;,&#xd;
		&quot;loanRate&quot;: &quot;10&quot;,&#xd;
		&quot;loanTermInYears&quot;: &quot;8&quot;,&#xd;
		&quot;interestOnlyTermInMonths&quot;: &quot;5&quot;,&#xd;
		&quot;loanMaturity&quot;: &quot;10-31-2024&quot;,&#xd;
		&quot;lenderTypeId&quot;: null,&#xd;
		&quot;ipaCapitalMarketsInvolved&quot;: null,&#xd;
		&quot;supplementalDetails&quot;: null&#xd;
	},&#xd;
	&quot;feeInfo&quot;: {&#xd;
		&quot;feeAllocationTypeId&quot;: 2,&#xd;
		&quot;sideFeeSplitTypeId&quot;: 2,&#xd;
		&quot;grossCommission&quot;: 3,&#xd;
		&quot;listSideFeeSplit&quot;: 50,&#xd;
		&quot;sellSideFeeSplit&quot;: 50&#xd;
	},&#xd;
	&quot;closingStatistics&quot;: {&#xd;
		&quot;numOffers&quot;: null,&#xd;
		&quot;offerors&quot;: [],&#xd;
		&quot;confidentialityAgreements&quot;: null,&#xd;
		&quot;tours&quot;: null&#xd;
	},&#xd;
	&quot;contractInfo&quot;: {&#xd;
		&quot;referrals&quot;: [&#xd;
			{&#xd;
				&quot;salutationId&quot;: 4,&#xd;
				&quot;firstName&quot;: &quot;Test REferral&quot;,&#xd;
				&quot;middleName&quot;: &quot;Test REferral&quot;,&#xd;
				&quot;lastName&quot;: &quot;Last Name Text&quot;,&#xd;
				&quot;company&quot;: &quot;Company TEst&quot;,&#xd;
				&quot;title&quot;: &quot;Title...&quot;,&#xd;
				&quot;isBroker&quot;: true,&#xd;
				&quot;phone&quot;: &quot;88888888&quot;,&#xd;
				&quot;email&quot;: &quot;ASASD@ASD.COM&quot;,&#xd;
				&quot;address1&quot;: &quot;15000 Arroyo Dr&quot;,&#xd;
				&quot;locality&quot;: &quot;Irvine&quot;,&#xd;
				&quot;administrativeAreaLevelOne&quot;: &quot;CA&quot;,&#xd;
				&quot;country&quot;: &quot;US&quot;,&#xd;
				&quot;postalCode&quot;: &quot;92617&quot;,&#xd;
				&quot;mmResponsibleForFee&quot;: true,&#xd;
				&quot;commissionResponsibilities&quot;: [&#xd;
					{&#xd;
						&quot;commissionAmount&quot;: 1,&#xd;
						&quot;feeAllocationType&quot;: 2,&#xd;
						&quot;side&quot;: &quot;L&quot;&#xd;
					}&#xd;
				]&#xd;
			}&#xd;
		],&#xd;
		&quot;hasReferrals&quot;: true,&#xd;
		&quot;propertyAssetTypeId&quot;: null,&#xd;
		&quot;hasRequestForOffer&quot;: null,&#xd;
		&quot;listingPrice&quot;: null,&#xd;
		&quot;activityMethodId&quot;: 1,&#xd;
		&quot;hasExclusions&quot;: null,&#xd;
		&quot;variableCommissionSchedule&quot;: {&#xd;
			&quot;variableCommissionScheduleApplies&quot;: null&#xd;
		},&#xd;
		&quot;exclusionsEntity&quot;: null,&#xd;
		&quot;listingEventId&quot;: null,&#xd;
		&quot;refusals&quot;: [],&#xd;
		&quot;underContractStatusId&quot;: null,&#xd;
		&quot;obstaclesToClose&quot;: null,&#xd;
		&quot;probabilityToCloseId&quot;: null,&#xd;
		&quot;contingencies&quot;: []&#xd;
	},&#xd;
	&quot;propertyInfo&quot;: {&#xd;
		&quot;propertyName&quot;: &quot;Automate Pipeline JR 2 ${dealId}&quot;,&#xd;
		&quot;commercialSquareFeet&quot;: null,&#xd;
		&quot;residentialSquareFeet&quot;: null,&#xd;
		&quot;address1&quot;: &quot;&quot;,&#xd;
		&quot;address2&quot;: &quot;&quot;,&#xd;
		&quot;locality&quot;: &quot;&quot;,&#xd;
		&quot;administrativeAreaLevelOne&quot;: &quot;${officeCode}&quot;,&#xd;
		&quot;postalCode&quot;: &quot;${postalCode}&quot;,&#xd;
		&quot;country&quot;: &quot;US&quot;,&#xd;
		&quot;longitude&quot;: 0,&#xd;
		&quot;latitude&quot;: 0,&#xd;
		&quot;addressCheckServiceId&quot;: 0,&#xd;
		&quot;administrativeAreaLevelTwo&quot;: &quot;&quot;,&#xd;
		&quot;portfolioId&quot;: null,&#xd;
		&quot;propertyTypeId&quot;: 2,&#xd;
		&quot;propertySubTypeId&quot;: 2,&#xd;
		&quot;seniorFacilityTypeId&quot;: null,&#xd;
		&quot;strategyTypeId&quot;: null,&#xd;
		&quot;lotSize&quot;: null,&#xd;
		&quot;lotSizeUnitOfMeasurement&quot;: 1,&#xd;
		&quot;yearBuilt&quot;: null,&#xd;
		&quot;yearLastRenovated&quot;: null,&#xd;
		&quot;numUnits&quot;: null,&#xd;
		&quot;rentableSqFt&quot;: null,&#xd;
		&quot;grossSqFt&quot;: null,&#xd;
		&quot;numberOfSuites&quot;: null&#xd;
	},&#xd;
	&quot;sellerInfo&quot;: {&#xd;
		&quot;side&quot;: &quot;L&quot;,&#xd;
		&quot;clients&quot;: [&#xd;
			{&#xd;
				&quot;phone&quot;: &quot;456-120-1921&quot;,&#xd;
				&quot;email&quot;: &quot;Dave_Rowe@gmail.com&quot;,&#xd;
				&quot;legalOwner&quot;: null,&#xd;
				&quot;isEquityPartner&quot;: null,&#xd;
				&quot;isExchange&quot;: true,&#xd;
				&quot;exchangePropertyState&quot;: null,&#xd;
				&quot;exchangePropertyType&quot;: 7,&#xd;
				&quot;firstName&quot;: &quot;Daren&quot;,&#xd;
				&quot;middleName&quot;: &quot;Tomas&quot;,&#xd;
				&quot;lastName&quot;: &quot;King&quot;,&#xd;
				&quot;salutationId&quot;: 17,&#xd;
				&quot;title&quot;: &quot;Global Applications Associate&quot;,&#xd;
				&quot;company&quot;: &quot;Yost Inc&quot;,&#xd;
				&quot;clientTypeId&quot;: 1,&#xd;
				&quot;address1&quot;: &quot;1500 E Medical Center Dr&quot;,&#xd;
				&quot;address2&quot;: &quot;add 2&quot;,&#xd;
				&quot;locality&quot;: &quot;Ann Arbor&quot;,&#xd;
				&quot;administrativeAreaLevelOne&quot;: &quot;MI&quot;,&#xd;
				&quot;postalCode&quot;: &quot;48109&quot;,&#xd;
				&quot;country&quot;: &quot;US&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;majorMarketRivalId&quot;: null&#xd;
	},&#xd;
	&quot;marketingInfo&quot;: {&#xd;
		&quot;showOnInternet&quot;: true,&#xd;
		&quot;exportToCoStar&quot;: false,&#xd;
		&quot;approvedForPressRelease&quot;: false,&#xd;
		&quot;showPriceOnPressRelease&quot;: false,&#xd;
		&quot;accessControlStatus&quot;: 0&#xd;
	},&#xd;
	&quot;teamInfo&quot;: {&#xd;
		&quot;purchasePrice&quot;: 400000,&#xd;
		&quot;referrals&quot;: [&#xd;
			{&#xd;
				&quot;salutationId&quot;: 4,&#xd;
				&quot;firstName&quot;: &quot;Test REferral&quot;,&#xd;
				&quot;middleName&quot;: &quot;Test REferral&quot;,&#xd;
				&quot;lastName&quot;: &quot;Last Name Text&quot;,&#xd;
				&quot;company&quot;: &quot;Company TEst&quot;,&#xd;
				&quot;title&quot;: &quot;Title...&quot;,&#xd;
				&quot;isBroker&quot;: true,&#xd;
				&quot;phone&quot;: &quot;88888888&quot;,&#xd;
				&quot;email&quot;: &quot;ASASD@ASD.COM&quot;,&#xd;
				&quot;address1&quot;: &quot;15000 Arroyo Dr&quot;,&#xd;
				&quot;locality&quot;: &quot;Irvine&quot;,&#xd;
				&quot;administrativeAreaLevelOne&quot;: &quot;CA&quot;,&#xd;
				&quot;country&quot;: &quot;US&quot;,&#xd;
				&quot;postalCode&quot;: &quot;92617&quot;,&#xd;
				&quot;mmResponsibleForFee&quot;: true,&#xd;
				&quot;commissionResponsibilities&quot;: [&#xd;
					{&#xd;
						&quot;commissionAmount&quot;: 1,&#xd;
						&quot;feeAllocationType&quot;: 2,&#xd;
						&quot;side&quot;: &quot;L&quot;&#xd;
					}&#xd;
				]&#xd;
			}&#xd;
		],&#xd;
		&quot;hasReferral&quot;: true,&#xd;
		&quot;coopAgents&quot;: [],&#xd;
		&quot;hasCoopAgent&quot;: false,&#xd;
		&quot;listingAgentFeesInDollars&quot;: false,&#xd;
		&quot;listingTeam&quot;: [&#xd;
			{&#xd;
				&quot;agentId&quot;: 24783,&#xd;
				&quot;feeAmount&quot;: 100,&#xd;
				&quot;sips&quot;: [],&#xd;
				&quot;revenueOffices&quot;: [&#xd;
					{&#xd;
						&quot;amount&quot;: 1,&#xd;
						&quot;officeId&quot;: &quot;003&quot;&#xd;
					}&#xd;
				]&#xd;
			}&#xd;
		],&#xd;
		&quot;sellingAgentFeesInDollars&quot;: false,&#xd;
		&quot;sellingTeam&quot;: [&#xd;
			{&#xd;
				&quot;agentId&quot;: 2981,&#xd;
				&quot;feeAmount&quot;: 100,&#xd;
				&quot;sips&quot;: [],&#xd;
				&quot;revenueOffices&quot;: [&#xd;
					{&#xd;
						&quot;amount&quot;: 1,&#xd;
						&quot;officeId&quot;: &quot;027&quot;&#xd;
					}&#xd;
				]&#xd;
			}&#xd;
		]&#xd;
	},&#xd;
	&quot;associatedFiles&quot;: {&#xd;
		&quot;purchaseAndSale&quot;: null,&#xd;
		&quot;additional&quot;: [&#xd;
			{&#xd;
				&quot;userDocumentType&quot;: 4,&#xd;
				&quot;fileId&quot;: &quot;${docFileId5}&quot;,&#xd;
				&quot;fileName&quot;: &quot;Add FIle 2 - Copy.pdf&quot;,&#xd;
				&quot;uploadedDateTime&quot;: null,&#xd;
				&quot;uploadedLifeCycleGroup&quot;: 3&#xd;
			}&#xd;
		],&#xd;
		&quot;memorandum&quot;: null,&#xd;
		&quot;executiveSummary&quot;: null,&#xd;
		&quot;publicRepAgreement&quot;: null,&#xd;
		&quot;auctionAgreement&quot;: null,&#xd;
		&quot;repAgreement&quot;: null,&#xd;
		&quot;settlementStatement&quot;: {&#xd;
			&quot;fileId&quot;: &quot;${docFileId7}&quot;,&#xd;
			&quot;fileName&quot;: &quot;SettlementStatementdoc.pdf&quot;,&#xd;
			&quot;uploadedDateTime&quot;: null,&#xd;
			&quot;uploadedLifeCycleGroup&quot;: 5,&#xd;
			&quot;userDocumentType&quot;: 3&#xd;
		}&#xd;
	},&#xd;
	&quot;saleTypeInfo&quot;: {&#xd;
		&quot;saleTypeId&quot;: 2,&#xd;
		&quot;auctionOfferingMethodId&quot;: 2,&#xd;
		&quot;useInternalAuctionConsultant&quot;: true,&#xd;
		&quot;auctionPlatformId&quot;: 1,&#xd;
		&quot;otherAuctionPlatform&quot;: &quot;Other Auction PlatformText&quot;,&#xd;
		&quot;auctionSiteUrl&quot;: &quot;https://Amazon.com/Test/#$%&amp;.com&quot;,&#xd;
		&quot;auctionEndDate&quot;: &quot;10-29-2024&quot;,&#xd;
		&quot;auctionStartDate&quot;: &quot;${today}&quot;,&#xd;
		&quot;startingBid&quot;: 1,&#xd;
		&quot;reservePrice&quot;: 200000.99,&#xd;
		&quot;auctionAdvisors&quot;: [&#xd;
			26660,&#xd;
			26661&#xd;
		]&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Closed_submit" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;dealId&quot;: ${dealId},&#xd;
	&quot;notes&quot;: null,&#xd;
	&quot;type&quot;: 4&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/submit</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Closed_loadActivities" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;group&quot;: 5,&#xd;
	&quot;filter&quot;: {&#xd;
		&quot;keyword&quot;: &quot;&quot;,&#xd;
		&quot;tags&quot;: [],&#xd;
		&quot;office&quot;: &quot;&quot;,&#xd;
		&quot;agent&quot;: &quot;&quot;,&#xd;
		&quot;statusFilters&quot;: []&#xd;
	},&#xd;
	&quot;pageIndex&quot;: 1,&#xd;
	&quot;pageSize&quot;: 10,&#xd;
	&quot;sort&quot;: {&#xd;
		&quot;direction&quot;: -1,&#xd;
		&quot;sortBy&quot;: 1,&#xd;
		&quot;displayName&quot;: &quot;New - Old&quot;&#xd;
	},&#xd;
	&quot;tab&quot;: 2&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/pipeline/activities</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="6. ------ Closed to Accounting and Submit" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Accnt_WorkFlowElevevatedAccess" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/workflow/elevated-access/${dealId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Accnt_getActivityId" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/pipeline/activity/${dealId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetActivityId2" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">activityId2</stringProp>
              <stringProp name="RegexExtractor.regex">,&quot;activityId&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Test Verify Activity and dealID" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script"></stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Accnt_Status-history" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/status-history/${dealId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_getActivitiesG1" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;group&quot;: 4,&#xd;
	&quot;filter&quot;: {&#xd;
		&quot;keyword&quot;: &quot;&quot;,&#xd;
		&quot;tags&quot;: [],&#xd;
		&quot;office&quot;: &quot;&quot;,&#xd;
		&quot;agent&quot;: &quot;&quot;,&#xd;
		&quot;statusFilters&quot;: []&#xd;
	},&#xd;
	&quot;pageIndex&quot;: 1,&#xd;
	&quot;pageSize&quot;: 10,&#xd;
	&quot;sort&quot;: {&#xd;
		&quot;direction&quot;: -1,&#xd;
		&quot;sortBy&quot;: 1,&#xd;
		&quot;displayName&quot;: &quot;New - Old&quot;&#xd;
	},&#xd;
	&quot;tab&quot;: 2&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/pipeline/activities</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listing_getActivitiesG2" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;group&quot;: 5,&#xd;
	&quot;filter&quot;: {&#xd;
		&quot;keyword&quot;: &quot;&quot;,&#xd;
		&quot;tags&quot;: [],&#xd;
		&quot;office&quot;: &quot;&quot;,&#xd;
		&quot;agent&quot;: &quot;&quot;,&#xd;
		&quot;statusFilters&quot;: []&#xd;
	},&#xd;
	&quot;pageIndex&quot;: 1,&#xd;
	&quot;pageSize&quot;: 10,&#xd;
	&quot;sort&quot;: {&#xd;
		&quot;direction&quot;: -1,&#xd;
		&quot;sortBy&quot;: 1,&#xd;
		&quot;displayName&quot;: &quot;New - Old&quot;&#xd;
	},&#xd;
	&quot;tab&quot;: 2&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/pipeline/activities</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Accnt_Documents?" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/documents?dealId=${dealId}&amp;lifeCycleGroupId=5</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Accnt_IsPropUnique?" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;dealId&quot;: ${dealId},&#xd;
	&quot;address1&quot;: &quot;&quot;,&#xd;
	&quot;postalCode&quot;: &quot;&quot;,&#xd;
	&quot;propertyType&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/isPropertyUnique</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Accnt_can Submit to Accounting" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/can-submit-to-accounting/${dealId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="------ Dropdowns ------" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Accnt_salutations" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/salutations</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Accnt_party-countries" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/party-countries</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Accnt_contacts" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/contacts</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Accnt_client-types" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/dropdowns/client-types</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Accnt_IsPropUnique?2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;dealId&quot;: ${dealId},&#xd;
	&quot;address1&quot;: &quot;&quot;,&#xd;
	&quot;postalCode&quot;: &quot;${postalCode}&quot;,&#xd;
	&quot;propertyType&quot;: 2&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/isPropertyUnique</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Accnt_Legal-documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;dealLifeCycleGroup&quot;: 5,&#xd;
	&quot;administrativeAreaLevelOne&quot;: &quot;${officeCode}&quot;,&#xd;
	&quot;country&quot;: &quot;US&quot;,&#xd;
	&quot;listingOfficeId&quot;: &quot;${officeId}&quot;,&#xd;
	&quot;activityMethodId&quot;: 1&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/legal-documents</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Accnt_deals (Submit)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;activityId&quot;: &quot;${activityId}&quot;,&#xd;
	&quot;dealId&quot;: ${dealId},&#xd;
	&quot;dealLifeCycleGroupId&quot;: 5,&#xd;
	&quot;dealStatusId&quot;: 4,&#xd;
	&quot;workflowTypeId&quot;: 4,&#xd;
	&quot;accessControlStatus&quot;: 0,&#xd;
	&quot;agentInfo&quot;: {&#xd;
		&quot;officeId&quot;: &quot;${postalCode}&quot;,&#xd;
		&quot;officeCode&quot;: &quot;${officeCode}&quot;,&#xd;
		&quot;feeSplitAllocationTypeId&quot;: 2,&#xd;
		&quot;listingAgents&quot;: [&#xd;
			{&#xd;
				&quot;agentId&quot;: 24783,&#xd;
				&quot;commissionShare&quot;: 100&#xd;
			}&#xd;
		],&#xd;
		&quot;originatorIds&quot;: [&#xd;
			15085&#xd;
		],&#xd;
		&quot;brokerOfRecord&quot;: null&#xd;
	},&#xd;
	&quot;buyerInfo&quot;: {&#xd;
		&quot;side&quot;: &quot;S&quot;,&#xd;
		&quot;clients&quot;: [&#xd;
			{&#xd;
				&quot;phone&quot;: &quot;3333333&quot;,&#xd;
				&quot;email&quot;: &quot;testmail@testmail.mail&quot;,&#xd;
				&quot;legalOwner&quot;: null,&#xd;
				&quot;isEquityPartner&quot;: null,&#xd;
				&quot;isExchange&quot;: false,&#xd;
				&quot;exchangePropertyState&quot;: null,&#xd;
				&quot;firstName&quot;: &quot;FirstTest&quot;,&#xd;
				&quot;middleName&quot;: &quot;Test&quot;,&#xd;
				&quot;lastName&quot;: &quot;Test&quot;,&#xd;
				&quot;salutationId&quot;: 17,&#xd;
				&quot;title&quot;: &quot;Test&quot;,&#xd;
				&quot;company&quot;: &quot;Cpmpany Test&quot;,&#xd;
				&quot;clientTypeId&quot;: 1,&#xd;
				&quot;address1&quot;: &quot;124 Eglinton Ave W&quot;,&#xd;
				&quot;address2&quot;: &quot;&quot;,&#xd;
				&quot;locality&quot;: &quot;Toronto&quot;,&#xd;
				&quot;administrativeAreaLevelOne&quot;: &quot;ON&quot;,&#xd;
				&quot;postalCode&quot;: &quot;M4R 2G8&quot;,&#xd;
				&quot;country&quot;: &quot;CA&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;majorMarketRivalId&quot;: null&#xd;
	},&#xd;
	&quot;closingInfo&quot;: {&#xd;
		&quot;dateContractSigned&quot;: {&#xd;
			&quot;year&quot;: ${year},&#xd;
			&quot;month&quot;: ${month},&#xd;
			&quot;day&quot;: ${day}&#xd;
		},&#xd;
		&quot;closingPrice&quot;: 400000,&#xd;
		&quot;settlementDate&quot;: &quot;${today}&quot;,&#xd;
		&quot;purchaseFinancingTypeId&quot;: 2,&#xd;
		&quot;commissionsAccountingNotes&quot;: &quot;Accounting note test&quot;,&#xd;
		&quot;lenderId&quot;: 301,&#xd;
		&quot;downPayment&quot;: 75000,&#xd;
		&quot;loanAmount&quot;: 850000,&#xd;
		&quot;loanRate&quot;: 10,&#xd;
		&quot;loanTermInYears&quot;: 8,&#xd;
		&quot;interestOnlyTermInMonths&quot;: 5,&#xd;
		&quot;loanMaturity&quot;: &quot;10-31-2024&quot;,&#xd;
		&quot;lenderTypeId&quot;: null,&#xd;
		&quot;ipaCapitalMarketsInvolved&quot;: null,&#xd;
		&quot;supplementalDetails&quot;: null&#xd;
	},&#xd;
	&quot;feeInfo&quot;: {&#xd;
		&quot;feeAllocationTypeId&quot;: 2,&#xd;
		&quot;sideFeeSplitTypeId&quot;: 2,&#xd;
		&quot;grossCommission&quot;: 3,&#xd;
		&quot;listSideFeeSplit&quot;: 50,&#xd;
		&quot;sellSideFeeSplit&quot;: 50&#xd;
	},&#xd;
	&quot;closingStatistics&quot;: {&#xd;
		&quot;numOffers&quot;: null,&#xd;
		&quot;offerors&quot;: [],&#xd;
		&quot;confidentialityAgreements&quot;: null,&#xd;
		&quot;tours&quot;: null&#xd;
	},&#xd;
	&quot;contractInfo&quot;: {&#xd;
		&quot;referrals&quot;: [&#xd;
			{&#xd;
				&quot;salutationId&quot;: 4,&#xd;
				&quot;firstName&quot;: &quot;Test REferral&quot;,&#xd;
				&quot;middleName&quot;: &quot;Test REferral&quot;,&#xd;
				&quot;lastName&quot;: &quot;Last Name Text&quot;,&#xd;
				&quot;company&quot;: &quot;Company TEst&quot;,&#xd;
				&quot;title&quot;: &quot;Title...&quot;,&#xd;
				&quot;isBroker&quot;: true,&#xd;
				&quot;phone&quot;: &quot;88888888&quot;,&#xd;
				&quot;email&quot;: &quot;ASASD@ASD.COM&quot;,&#xd;
				&quot;address1&quot;: &quot;15000 Arroyo Dr&quot;,&#xd;
				&quot;locality&quot;: &quot;Irvine&quot;,&#xd;
				&quot;administrativeAreaLevelOne&quot;: &quot;CA&quot;,&#xd;
				&quot;country&quot;: &quot;US&quot;,&#xd;
				&quot;postalCode&quot;: &quot;92617&quot;,&#xd;
				&quot;mmResponsibleForFee&quot;: true,&#xd;
				&quot;commissionResponsibilities&quot;: [&#xd;
					{&#xd;
						&quot;commissionAmount&quot;: 1,&#xd;
						&quot;feeAllocationType&quot;: 2,&#xd;
						&quot;side&quot;: &quot;L&quot;&#xd;
					}&#xd;
				]&#xd;
			}&#xd;
		],&#xd;
		&quot;hasReferrals&quot;: true,&#xd;
		&quot;propertyAssetTypeId&quot;: null,&#xd;
		&quot;hasRequestForOffer&quot;: null,&#xd;
		&quot;listingPrice&quot;: null,&#xd;
		&quot;activityMethodId&quot;: 1,&#xd;
		&quot;hasExclusions&quot;: null,&#xd;
		&quot;variableCommissionSchedule&quot;: {&#xd;
			&quot;variableCommissionScheduleApplies&quot;: null&#xd;
		},&#xd;
		&quot;exclusionsEntity&quot;: null,&#xd;
		&quot;listingEventId&quot;: null,&#xd;
		&quot;refusals&quot;: [],&#xd;
		&quot;underContractStatusId&quot;: null,&#xd;
		&quot;obstaclesToClose&quot;: null,&#xd;
		&quot;probabilityToCloseId&quot;: null,&#xd;
		&quot;contingencies&quot;: []&#xd;
	},&#xd;
	&quot;propertyInfo&quot;: {&#xd;
		&quot;propertyName&quot;: &quot;Automate Pipeline JR 2 ${dealId}&quot;,&#xd;
		&quot;commercialSquareFeet&quot;: null,&#xd;
		&quot;residentialSquareFeet&quot;: null,&#xd;
		&quot;address1&quot;: &quot;&quot;,&#xd;
		&quot;address2&quot;: &quot;&quot;,&#xd;
		&quot;locality&quot;: &quot;&quot;,&#xd;
		&quot;administrativeAreaLevelOne&quot;: &quot;${officeCode}&quot;,&#xd;
		&quot;postalCode&quot;: &quot;${postalCode}&quot;,&#xd;
		&quot;country&quot;: &quot;US&quot;,&#xd;
		&quot;longitude&quot;: 0,&#xd;
		&quot;latitude&quot;: 0,&#xd;
		&quot;addressCheckServiceId&quot;: 0,&#xd;
		&quot;administrativeAreaLevelTwo&quot;: &quot;&quot;,&#xd;
		&quot;portfolioId&quot;: null,&#xd;
		&quot;propertyTypeId&quot;: 2,&#xd;
		&quot;propertySubTypeId&quot;: 2,&#xd;
		&quot;seniorFacilityTypeId&quot;: null,&#xd;
		&quot;strategyTypeId&quot;: null,&#xd;
		&quot;lotSize&quot;: null,&#xd;
		&quot;lotSizeUnitOfMeasurement&quot;: 1,&#xd;
		&quot;yearBuilt&quot;: null,&#xd;
		&quot;yearLastRenovated&quot;: null,&#xd;
		&quot;numUnits&quot;: null,&#xd;
		&quot;rentableSqFt&quot;: null,&#xd;
		&quot;grossSqFt&quot;: null,&#xd;
		&quot;numberOfSuites&quot;: null&#xd;
	},&#xd;
	&quot;sellerInfo&quot;: {&#xd;
		&quot;side&quot;: &quot;L&quot;,&#xd;
		&quot;clients&quot;: [&#xd;
			{&#xd;
				&quot;phone&quot;: &quot;456-120-1921&quot;,&#xd;
				&quot;email&quot;: &quot;Dave_Rowe@gmail.com&quot;,&#xd;
				&quot;legalOwner&quot;: null,&#xd;
				&quot;isEquityPartner&quot;: null,&#xd;
				&quot;isExchange&quot;: true,&#xd;
				&quot;exchangePropertyState&quot;: null,&#xd;
				&quot;exchangePropertyType&quot;: 7,&#xd;
				&quot;firstName&quot;: &quot;Daren&quot;,&#xd;
				&quot;middleName&quot;: &quot;Tomas&quot;,&#xd;
				&quot;lastName&quot;: &quot;King&quot;,&#xd;
				&quot;salutationId&quot;: 17,&#xd;
				&quot;title&quot;: &quot;Global Applications Associate&quot;,&#xd;
				&quot;company&quot;: &quot;Yost Inc&quot;,&#xd;
				&quot;clientTypeId&quot;: 1,&#xd;
				&quot;address1&quot;: &quot;1500 E Medical Center Dr&quot;,&#xd;
				&quot;address2&quot;: &quot;add 2&quot;,&#xd;
				&quot;locality&quot;: &quot;Ann Arbor&quot;,&#xd;
				&quot;administrativeAreaLevelOne&quot;: &quot;MI&quot;,&#xd;
				&quot;postalCode&quot;: &quot;48109&quot;,&#xd;
				&quot;country&quot;: &quot;US&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;majorMarketRivalId&quot;: null&#xd;
	},&#xd;
	&quot;marketingInfo&quot;: {&#xd;
		&quot;showOnInternet&quot;: true,&#xd;
		&quot;exportToCoStar&quot;: false,&#xd;
		&quot;approvedForPressRelease&quot;: false,&#xd;
		&quot;showPriceOnPressRelease&quot;: false,&#xd;
		&quot;accessControlStatus&quot;: 0&#xd;
	},&#xd;
	&quot;teamInfo&quot;: {&#xd;
		&quot;purchasePrice&quot;: 400000,&#xd;
		&quot;referrals&quot;: [&#xd;
			{&#xd;
				&quot;salutationId&quot;: 4,&#xd;
				&quot;firstName&quot;: &quot;Test REferral&quot;,&#xd;
				&quot;middleName&quot;: &quot;Test REferral&quot;,&#xd;
				&quot;lastName&quot;: &quot;Last Name Text&quot;,&#xd;
				&quot;company&quot;: &quot;Company TEst&quot;,&#xd;
				&quot;title&quot;: &quot;Title...&quot;,&#xd;
				&quot;isBroker&quot;: true,&#xd;
				&quot;phone&quot;: &quot;88888888&quot;,&#xd;
				&quot;email&quot;: &quot;ASASD@ASD.COM&quot;,&#xd;
				&quot;address1&quot;: &quot;15000 Arroyo Dr&quot;,&#xd;
				&quot;locality&quot;: &quot;Irvine&quot;,&#xd;
				&quot;administrativeAreaLevelOne&quot;: &quot;CA&quot;,&#xd;
				&quot;country&quot;: &quot;US&quot;,&#xd;
				&quot;postalCode&quot;: &quot;92617&quot;,&#xd;
				&quot;mmResponsibleForFee&quot;: true,&#xd;
				&quot;commissionResponsibilities&quot;: [&#xd;
					{&#xd;
						&quot;commissionAmount&quot;: 1,&#xd;
						&quot;feeAllocationType&quot;: 2,&#xd;
						&quot;side&quot;: &quot;L&quot;&#xd;
					}&#xd;
				]&#xd;
			}&#xd;
		],&#xd;
		&quot;hasReferral&quot;: true,&#xd;
		&quot;coopAgents&quot;: [],&#xd;
		&quot;hasCoopAgent&quot;: false,&#xd;
		&quot;listingAgentFeesInDollars&quot;: false,&#xd;
		&quot;listingTeam&quot;: [&#xd;
			{&#xd;
				&quot;agentId&quot;: 24783,&#xd;
				&quot;feeAmount&quot;: 100,&#xd;
				&quot;sips&quot;: [],&#xd;
				&quot;revenueOffices&quot;: [&#xd;
					{&#xd;
						&quot;amount&quot;: 1,&#xd;
						&quot;officeId&quot;: &quot;003&quot;&#xd;
					}&#xd;
				]&#xd;
			}&#xd;
		],&#xd;
		&quot;sellingAgentFeesInDollars&quot;: false,&#xd;
		&quot;sellingTeam&quot;: [&#xd;
			{&#xd;
				&quot;agentId&quot;: 2981,&#xd;
				&quot;feeAmount&quot;: 100,&#xd;
				&quot;sips&quot;: [],&#xd;
				&quot;revenueOffices&quot;: [&#xd;
					{&#xd;
						&quot;amount&quot;: 1,&#xd;
						&quot;officeId&quot;: &quot;027&quot;&#xd;
					}&#xd;
				]&#xd;
			}&#xd;
		]&#xd;
	},&#xd;
	&quot;associatedFiles&quot;: {&#xd;
		&quot;purchaseAndSale&quot;: null,&#xd;
		&quot;additional&quot;: [&#xd;
			{&#xd;
				&quot;userDocumentType&quot;: 4,&#xd;
				&quot;fileId&quot;: &quot;${docFileId5}&quot;,&#xd;
				&quot;fileName&quot;: &quot;Add FIle 2 - Copy.pdf&quot;,&#xd;
				&quot;uploadedDateTime&quot;: null,&#xd;
				&quot;uploadedLifeCycleGroup&quot;: 3&#xd;
			}&#xd;
		],&#xd;
		&quot;memorandum&quot;: null,&#xd;
		&quot;executiveSummary&quot;: null,&#xd;
		&quot;publicRepAgreement&quot;: null,&#xd;
		&quot;auctionAgreement&quot;: null,&#xd;
		&quot;repAgreement&quot;: null,&#xd;
		&quot;settlementStatement&quot;: {&#xd;
			&quot;fileId&quot;: &quot;${docFileId7}&quot;,&#xd;
			&quot;fileName&quot;: &quot;SettlementStatementdoc.pdf&quot;,&#xd;
			&quot;uploadedDateTime&quot;: null,&#xd;
			&quot;uploadedLifeCycleGroup&quot;: 5,&#xd;
			&quot;userDocumentType&quot;: 3&#xd;
		}&#xd;
	},&#xd;
	&quot;saleTypeInfo&quot;: {&#xd;
		&quot;saleTypeId&quot;: 2,&#xd;
		&quot;auctionOfferingMethodId&quot;: 2,&#xd;
		&quot;useInternalAuctionConsultant&quot;: true,&#xd;
		&quot;auctionPlatformId&quot;: 1,&#xd;
		&quot;otherAuctionPlatform&quot;: &quot;Other Auction PlatformText&quot;,&#xd;
		&quot;auctionSiteUrl&quot;: &quot;https://Amazon.com/Test/#$%&amp;.com&quot;,&#xd;
		&quot;auctionEndDate&quot;: &quot;10-29-2024&quot;,&#xd;
		&quot;auctionStartDate&quot;: &quot;${today}&quot;,&#xd;
		&quot;startingBid&quot;: 1,&#xd;
		&quot;reservePrice&quot;: 200000.99,&#xd;
		&quot;auctionAdvisors&quot;: [&#xd;
			26660,&#xd;
			26661&#xd;
		]&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Accnt_submit" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;dealId&quot;: ${dealId},&#xd;
	&quot;notes&quot;: &quot;Notes to Staff Text test&quot;,&#xd;
	&quot;type&quot;: 5&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/submit</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Accnt_loadActivities" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;group&quot;: 5,&#xd;
	&quot;filter&quot;: {&#xd;
		&quot;keyword&quot;: &quot;&quot;,&#xd;
		&quot;tags&quot;: [],&#xd;
		&quot;office&quot;: &quot;&quot;,&#xd;
		&quot;agent&quot;: &quot;&quot;,&#xd;
		&quot;statusFilters&quot;: []&#xd;
	},&#xd;
	&quot;pageIndex&quot;: 1,&#xd;
	&quot;pageSize&quot;: 10,&#xd;
	&quot;sort&quot;: {&#xd;
		&quot;direction&quot;: -1,&#xd;
		&quot;sortBy&quot;: 1,&#xd;
		&quot;displayName&quot;: &quot;New - Old&quot;&#xd;
	},&#xd;
	&quot;tab&quot;: 2&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/pipeline/activities</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="7. ------ Impersonate and Approve" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="token" elementType="Argument">
                <stringProp name="Argument.name">token</stringProp>
                <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3dpbmRvd3NhY2NvdW50bmFtZSI6IkpSZXN0cmVwbzIiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjE5MTcwIiwiaHR0cDovL215LW1uZXQvb2ZmaWNlcyI6Ijk5MywwNzQsMDIzLDAxNiwwODksMDU1LDA5OCwwNzAsMDQ2LDA1NiwwMzQsOTk2LDMwMiw5OTksMDY2LDA0NSwwMTgsMDUyLDAzNywwMTUsMDk1LDA2NywwMzYsMDQ0LDA2MiwwODIsMDMyLDk5OCwwOTIsMDA2LDAwNSwwMjksMDkxLDAxMiw1MTEsMDY5LDAyNCwwNDEsMDg4LDA1OSwwOTMsMDYwLDA4MCwwMDQsMDI2LDA3NywwNzUsMDQ3LDA1NCwwOTYsMDUwLDAyMiwwNzksMDEzLDAxNCwwNTMsMDQzLDAzMyw5OTcsMDYzLDAzOSwwMTcsMDUxLDAwMCw5OTQsMDg3LDA0OCwwMzUsMDI4LDA1OCwwMTAsMDQwLDA2MSwwNzMsMDA4LDAzMSwzMDQsMDk3LDAwMSw5OTUsMDMwLDAwNyw5OTIsMDcxLDAyMSw5OTEsMDgxLDA3OCwwNDIsMDcyLDEwMCwwMDMsMDIwLDA0OSwwMDksMDAyLDA5NCwwMTEsMDg0LDk5Myw1NTAsMDY4LDAyNSwwODYsMzAxLDAxOSwwODMsMzAzLDA1NywwNjQsMDI3LDAzOCwwODUsMDc2LDA5OSwwNjUsNTE2LDUwNiw1MDUsMzA2LDU0MSw1MDQsMTAzLDMwNSwzMzEiLCJodHRwOi8vbXktbW5ldC9jb21wYW5pZXMiOiI1IiwiaHR0cDovL215LW1uZXQvc3BlY2lhbHRpZXMiOiIiLCJodHRwOi8vbXktbW5ldC9yb2xlcyI6IjI2IiwiaHR0cDovL215LW1uZXQvaXNJcGEiOiJGYWxzZSIsImh0dHA6Ly9teS1tbmV0L21hbmFnZWRJZHMiOiIiLCJodHRwOi8vbXktbW5ldC9ib3JNYW5hZ2VyU3RhdGVzIjoiIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwOS8wOS9pZGVudGl0eS9jbGFpbXMvYWN0b3IiOiJTQmVja2VyIiwiaHR0cDovL215LW1uZXQvd2luZG93c0FjY291bnRJZCI6IjI2OTQyIiwiZXhwIjoxNjY2MzAxNTU2LCJpc3MiOiJtbXJlaWJjLnBydiIsImF1ZCI6Im1tcmVpYmMucHJ2In0.SbkaGNk9SgXXxavt4IhdsgXdTaIq_WH5kN3N_tK0YKE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="environment" elementType="Argument">
                <stringProp name="Argument.name">environment</stringProp>
                <stringProp name="Argument.value">test-</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="officeId" elementType="Argument">
                <stringProp name="Argument.name">officeId</stringProp>
                <stringProp name="Argument.value">996</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="accountantUser" elementType="Argument">
                <stringProp name="Argument.name">accountantUser</stringProp>
                <stringProp name="Argument.value">MMNetTestLastE2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dealId" elementType="Argument">
                <stringProp name="Argument.name">dealId</stringProp>
                <stringProp name="Argument.value">118945</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Appr_ImpersonateAccountant" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}authentication.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/impersonation/${accountantUser}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetAccToken" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">AccToken</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;}</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">vars.put(&quot;token&quot;, &quot;Bearer &quot; + vars.get(&quot;AccToken&quot;));</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Appr_WorkFlowElevevatedAccess" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/workflow/elevated-access/${dealId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Appr_Status-history" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/status-history/${dealId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Appr_getDeal" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/${dealId} </stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GetActivityId2" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">activityId2</stringProp>
              <stringProp name="RegexExtractor.regex">,&quot;activityId&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Test Verify Activity and dealID" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script"></stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Appr_Documents?" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/documents?dealId=${dealId}&amp;lifeCycleGroupId=5</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Appr_IsPropUnique?" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;dealId&quot;: ${dealId},&#xd;
	&quot;address1&quot;: &quot;&quot;,&#xd;
	&quot;postalCode&quot;: &quot;&quot;,&#xd;
	&quot;propertyType&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/isPropertyUnique</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Appr_can Submit to Accounting" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/can-submit-to-accounting/${dealId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Appr_IsPropUnique?2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;dealId&quot;: ${dealId},&#xd;
	&quot;address1&quot;: &quot;&quot;,&#xd;
	&quot;postalCode&quot;: &quot;${postalCode}&quot;,&#xd;
	&quot;propertyType&quot;: 2&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/isPropertyUnique</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Appr_Legal-documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;dealLifeCycleGroup&quot;: 5,&#xd;
	&quot;administrativeAreaLevelOne&quot;: &quot;${officeCode}&quot;,&#xd;
	&quot;country&quot;: &quot;US&quot;,&#xd;
	&quot;listingOfficeId&quot;: &quot;${officeId}&quot;,&#xd;
	&quot;activityMethodId&quot;: 1&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/legal-documents</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Appr_deals (Submit)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;activityId&quot;: &quot;${activityId}&quot;,&#xd;
	&quot;dealId&quot;: ${dealId},&#xd;
	&quot;dealLifeCycleGroupId&quot;: 5,&#xd;
	&quot;dealStatusId&quot;: 3,&#xd;
	&quot;workflowTypeId&quot;: 4,&#xd;
	&quot;accessControlStatus&quot;: 0,&#xd;
	&quot;agentInfo&quot;: {&#xd;
		&quot;officeId&quot;: &quot;${postalCode}&quot;,&#xd;
		&quot;officeCode&quot;: &quot;${officeCode}&quot;,&#xd;
		&quot;feeSplitAllocationTypeId&quot;: 2,&#xd;
		&quot;listingAgents&quot;: [&#xd;
			{&#xd;
				&quot;agentId&quot;: 24783,&#xd;
				&quot;commissionShare&quot;: 100&#xd;
			}&#xd;
		],&#xd;
		&quot;originatorIds&quot;: [&#xd;
			15085&#xd;
		],&#xd;
		&quot;brokerOfRecord&quot;: null&#xd;
	},&#xd;
	&quot;buyerInfo&quot;: {&#xd;
		&quot;side&quot;: &quot;S&quot;,&#xd;
		&quot;clients&quot;: [&#xd;
			{&#xd;
				&quot;phone&quot;: &quot;3333333&quot;,&#xd;
				&quot;email&quot;: &quot;testmail@testmail.mail&quot;,&#xd;
				&quot;legalOwner&quot;: null,&#xd;
				&quot;isEquityPartner&quot;: null,&#xd;
				&quot;isExchange&quot;: false,&#xd;
				&quot;exchangePropertyState&quot;: null,&#xd;
				&quot;firstName&quot;: &quot;FirstTest&quot;,&#xd;
				&quot;middleName&quot;: &quot;Test&quot;,&#xd;
				&quot;lastName&quot;: &quot;Test&quot;,&#xd;
				&quot;salutationId&quot;: 17,&#xd;
				&quot;title&quot;: &quot;Test&quot;,&#xd;
				&quot;company&quot;: &quot;Cpmpany Test&quot;,&#xd;
				&quot;clientTypeId&quot;: 1,&#xd;
				&quot;address1&quot;: &quot;124 Eglinton Ave W&quot;,&#xd;
				&quot;address2&quot;: &quot;&quot;,&#xd;
				&quot;locality&quot;: &quot;Toronto&quot;,&#xd;
				&quot;administrativeAreaLevelOne&quot;: &quot;ON&quot;,&#xd;
				&quot;postalCode&quot;: &quot;M4R 2G8&quot;,&#xd;
				&quot;country&quot;: &quot;CA&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;majorMarketRivalId&quot;: null&#xd;
	},&#xd;
	&quot;closingInfo&quot;: {&#xd;
		&quot;dateContractSigned&quot;: {&#xd;
			&quot;year&quot;: ${year},&#xd;
			&quot;month&quot;: ${month},&#xd;
			&quot;day&quot;: ${day}&#xd;
		},&#xd;
		&quot;closingPrice&quot;: 400000,&#xd;
		&quot;settlementDate&quot;: &quot;${today}&quot;,&#xd;
		&quot;purchaseFinancingTypeId&quot;: 2,&#xd;
		&quot;commissionsAccountingNotes&quot;: &quot;Accounting note test&quot;,&#xd;
		&quot;lenderId&quot;: 301,&#xd;
		&quot;downPayment&quot;: 75000,&#xd;
		&quot;loanAmount&quot;: 850000,&#xd;
		&quot;loanRate&quot;: 10,&#xd;
		&quot;loanTermInYears&quot;: 8,&#xd;
		&quot;interestOnlyTermInMonths&quot;: 5,&#xd;
		&quot;loanMaturity&quot;: &quot;10-31-2024&quot;,&#xd;
		&quot;lenderTypeId&quot;: null,&#xd;
		&quot;ipaCapitalMarketsInvolved&quot;: null,&#xd;
		&quot;supplementalDetails&quot;: null&#xd;
	},&#xd;
	&quot;feeInfo&quot;: {&#xd;
		&quot;feeAllocationTypeId&quot;: 2,&#xd;
		&quot;sideFeeSplitTypeId&quot;: 2,&#xd;
		&quot;grossCommission&quot;: 3,&#xd;
		&quot;listSideFeeSplit&quot;: 50,&#xd;
		&quot;sellSideFeeSplit&quot;: 50&#xd;
	},&#xd;
	&quot;closingStatistics&quot;: {&#xd;
		&quot;numOffers&quot;: null,&#xd;
		&quot;offerors&quot;: [],&#xd;
		&quot;confidentialityAgreements&quot;: null,&#xd;
		&quot;tours&quot;: null&#xd;
	},&#xd;
	&quot;contractInfo&quot;: {&#xd;
		&quot;referrals&quot;: [&#xd;
			{&#xd;
				&quot;salutationId&quot;: 4,&#xd;
				&quot;firstName&quot;: &quot;Test REferral&quot;,&#xd;
				&quot;middleName&quot;: &quot;Test REferral&quot;,&#xd;
				&quot;lastName&quot;: &quot;Last Name Text&quot;,&#xd;
				&quot;company&quot;: &quot;Company TEst&quot;,&#xd;
				&quot;title&quot;: &quot;Title...&quot;,&#xd;
				&quot;isBroker&quot;: true,&#xd;
				&quot;phone&quot;: &quot;88888888&quot;,&#xd;
				&quot;email&quot;: &quot;ASASD@ASD.COM&quot;,&#xd;
				&quot;address1&quot;: &quot;15000 Arroyo Dr&quot;,&#xd;
				&quot;locality&quot;: &quot;Irvine&quot;,&#xd;
				&quot;administrativeAreaLevelOne&quot;: &quot;CA&quot;,&#xd;
				&quot;country&quot;: &quot;US&quot;,&#xd;
				&quot;postalCode&quot;: &quot;92617&quot;,&#xd;
				&quot;mmResponsibleForFee&quot;: true,&#xd;
				&quot;commissionResponsibilities&quot;: [&#xd;
					{&#xd;
						&quot;commissionAmount&quot;: 1,&#xd;
						&quot;feeAllocationType&quot;: 2,&#xd;
						&quot;side&quot;: &quot;L&quot;&#xd;
					}&#xd;
				]&#xd;
			}&#xd;
		],&#xd;
		&quot;hasReferrals&quot;: true,&#xd;
		&quot;propertyAssetTypeId&quot;: null,&#xd;
		&quot;hasRequestForOffer&quot;: null,&#xd;
		&quot;listingPrice&quot;: null,&#xd;
		&quot;activityMethodId&quot;: 1,&#xd;
		&quot;hasExclusions&quot;: null,&#xd;
		&quot;variableCommissionSchedule&quot;: {&#xd;
			&quot;variableCommissionScheduleApplies&quot;: null&#xd;
		},&#xd;
		&quot;exclusionsEntity&quot;: null,&#xd;
		&quot;listingEventId&quot;: null,&#xd;
		&quot;refusals&quot;: [],&#xd;
		&quot;underContractStatusId&quot;: null,&#xd;
		&quot;obstaclesToClose&quot;: null,&#xd;
		&quot;probabilityToCloseId&quot;: null,&#xd;
		&quot;contingencies&quot;: []&#xd;
	},&#xd;
	&quot;propertyInfo&quot;: {&#xd;
		&quot;propertyName&quot;: &quot;Automate Pipeline JR 2 ${dealId}&quot;,&#xd;
		&quot;commercialSquareFeet&quot;: null,&#xd;
		&quot;residentialSquareFeet&quot;: null,&#xd;
		&quot;address1&quot;: &quot;&quot;,&#xd;
		&quot;address2&quot;: &quot;&quot;,&#xd;
		&quot;locality&quot;: &quot;&quot;,&#xd;
		&quot;administrativeAreaLevelOne&quot;: &quot;${officeCode}&quot;,&#xd;
		&quot;postalCode&quot;: &quot;${postalCode}&quot;,&#xd;
		&quot;country&quot;: &quot;US&quot;,&#xd;
		&quot;longitude&quot;: 0,&#xd;
		&quot;latitude&quot;: 0,&#xd;
		&quot;addressCheckServiceId&quot;: 0,&#xd;
		&quot;administrativeAreaLevelTwo&quot;: &quot;&quot;,&#xd;
		&quot;portfolioId&quot;: null,&#xd;
		&quot;propertyTypeId&quot;: 2,&#xd;
		&quot;propertySubTypeId&quot;: 2,&#xd;
		&quot;seniorFacilityTypeId&quot;: null,&#xd;
		&quot;strategyTypeId&quot;: null,&#xd;
		&quot;lotSize&quot;: null,&#xd;
		&quot;lotSizeUnitOfMeasurement&quot;: 1,&#xd;
		&quot;yearBuilt&quot;: null,&#xd;
		&quot;yearLastRenovated&quot;: null,&#xd;
		&quot;numUnits&quot;: null,&#xd;
		&quot;rentableSqFt&quot;: null,&#xd;
		&quot;grossSqFt&quot;: null,&#xd;
		&quot;numberOfSuites&quot;: null&#xd;
	},&#xd;
	&quot;sellerInfo&quot;: {&#xd;
		&quot;side&quot;: &quot;L&quot;,&#xd;
		&quot;clients&quot;: [&#xd;
			{&#xd;
				&quot;phone&quot;: &quot;456-120-1921&quot;,&#xd;
				&quot;email&quot;: &quot;Dave_Rowe@gmail.com&quot;,&#xd;
				&quot;legalOwner&quot;: null,&#xd;
				&quot;isEquityPartner&quot;: null,&#xd;
				&quot;isExchange&quot;: true,&#xd;
				&quot;exchangePropertyState&quot;: null,&#xd;
				&quot;exchangePropertyType&quot;: 7,&#xd;
				&quot;firstName&quot;: &quot;Daren&quot;,&#xd;
				&quot;middleName&quot;: &quot;Tomas&quot;,&#xd;
				&quot;lastName&quot;: &quot;King&quot;,&#xd;
				&quot;salutationId&quot;: 17,&#xd;
				&quot;title&quot;: &quot;Global Applications Associate&quot;,&#xd;
				&quot;company&quot;: &quot;Yost Inc&quot;,&#xd;
				&quot;clientTypeId&quot;: 1,&#xd;
				&quot;address1&quot;: &quot;1500 E Medical Center Dr&quot;,&#xd;
				&quot;address2&quot;: &quot;add 2&quot;,&#xd;
				&quot;locality&quot;: &quot;Ann Arbor&quot;,&#xd;
				&quot;administrativeAreaLevelOne&quot;: &quot;MI&quot;,&#xd;
				&quot;postalCode&quot;: &quot;48109&quot;,&#xd;
				&quot;country&quot;: &quot;US&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;majorMarketRivalId&quot;: null&#xd;
	},&#xd;
	&quot;marketingInfo&quot;: {&#xd;
		&quot;showOnInternet&quot;: true,&#xd;
		&quot;exportToCoStar&quot;: false,&#xd;
		&quot;approvedForPressRelease&quot;: false,&#xd;
		&quot;showPriceOnPressRelease&quot;: false,&#xd;
		&quot;accessControlStatus&quot;: 0&#xd;
	},&#xd;
	&quot;teamInfo&quot;: {&#xd;
		&quot;purchasePrice&quot;: 400000,&#xd;
		&quot;referrals&quot;: [&#xd;
			{&#xd;
				&quot;salutationId&quot;: 4,&#xd;
				&quot;firstName&quot;: &quot;Test REferral&quot;,&#xd;
				&quot;middleName&quot;: &quot;Test REferral&quot;,&#xd;
				&quot;lastName&quot;: &quot;Last Name Text&quot;,&#xd;
				&quot;company&quot;: &quot;Company TEst&quot;,&#xd;
				&quot;title&quot;: &quot;Title...&quot;,&#xd;
				&quot;isBroker&quot;: true,&#xd;
				&quot;phone&quot;: &quot;88888888&quot;,&#xd;
				&quot;email&quot;: &quot;ASASD@ASD.COM&quot;,&#xd;
				&quot;address1&quot;: &quot;15000 Arroyo Dr&quot;,&#xd;
				&quot;locality&quot;: &quot;Irvine&quot;,&#xd;
				&quot;administrativeAreaLevelOne&quot;: &quot;CA&quot;,&#xd;
				&quot;country&quot;: &quot;US&quot;,&#xd;
				&quot;postalCode&quot;: &quot;92617&quot;,&#xd;
				&quot;mmResponsibleForFee&quot;: true,&#xd;
				&quot;commissionResponsibilities&quot;: [&#xd;
					{&#xd;
						&quot;commissionAmount&quot;: 1,&#xd;
						&quot;feeAllocationType&quot;: 2,&#xd;
						&quot;side&quot;: &quot;L&quot;&#xd;
					}&#xd;
				]&#xd;
			}&#xd;
		],&#xd;
		&quot;hasReferral&quot;: true,&#xd;
		&quot;coopAgents&quot;: [],&#xd;
		&quot;hasCoopAgent&quot;: false,&#xd;
		&quot;listingAgentFeesInDollars&quot;: false,&#xd;
		&quot;listingTeam&quot;: [&#xd;
			{&#xd;
				&quot;agentId&quot;: 24783,&#xd;
				&quot;feeAmount&quot;: 100,&#xd;
				&quot;sips&quot;: [],&#xd;
				&quot;revenueOffices&quot;: [&#xd;
					{&#xd;
						&quot;amount&quot;: 1,&#xd;
						&quot;officeId&quot;: &quot;003&quot;&#xd;
					}&#xd;
				]&#xd;
			}&#xd;
		],&#xd;
		&quot;sellingAgentFeesInDollars&quot;: false,&#xd;
		&quot;sellingTeam&quot;: [&#xd;
			{&#xd;
				&quot;agentId&quot;: 2981,&#xd;
				&quot;feeAmount&quot;: 100,&#xd;
				&quot;sips&quot;: [],&#xd;
				&quot;revenueOffices&quot;: [&#xd;
					{&#xd;
						&quot;amount&quot;: 1,&#xd;
						&quot;officeId&quot;: &quot;027&quot;&#xd;
					}&#xd;
				]&#xd;
			}&#xd;
		]&#xd;
	},&#xd;
	&quot;associatedFiles&quot;: {&#xd;
		&quot;purchaseAndSale&quot;: null,&#xd;
		&quot;additional&quot;: [&#xd;
			{&#xd;
				&quot;userDocumentType&quot;: 4,&#xd;
				&quot;fileId&quot;: &quot;${docFileId5}&quot;,&#xd;
				&quot;fileName&quot;: &quot;Add FIle 2 - Copy.pdf&quot;,&#xd;
				&quot;uploadedDateTime&quot;: null,&#xd;
				&quot;uploadedLifeCycleGroup&quot;: 3&#xd;
			}&#xd;
		],&#xd;
		&quot;memorandum&quot;: null,&#xd;
		&quot;executiveSummary&quot;: null,&#xd;
		&quot;publicRepAgreement&quot;: null,&#xd;
		&quot;auctionAgreement&quot;: null,&#xd;
		&quot;repAgreement&quot;: null,&#xd;
		&quot;settlementStatement&quot;: {&#xd;
			&quot;fileId&quot;: &quot;${docFileId7}&quot;,&#xd;
			&quot;fileName&quot;: &quot;SettlementStatementdoc.pdf&quot;,&#xd;
			&quot;uploadedDateTime&quot;: null,&#xd;
			&quot;uploadedLifeCycleGroup&quot;: 5,&#xd;
			&quot;userDocumentType&quot;: 3&#xd;
		}&#xd;
	},&#xd;
	&quot;saleTypeInfo&quot;: {&#xd;
		&quot;saleTypeId&quot;: 2,&#xd;
		&quot;auctionOfferingMethodId&quot;: 2,&#xd;
		&quot;useInternalAuctionConsultant&quot;: true,&#xd;
		&quot;auctionPlatformId&quot;: 1,&#xd;
		&quot;otherAuctionPlatform&quot;: &quot;Other Auction PlatformText&quot;,&#xd;
		&quot;auctionSiteUrl&quot;: &quot;https://Amazon.com/Test/#$%&amp;.com&quot;,&#xd;
		&quot;auctionEndDate&quot;: &quot;10-29-2024&quot;,&#xd;
		&quot;auctionStartDate&quot;: &quot;${today}&quot;,&#xd;
		&quot;startingBid&quot;: 1,&#xd;
		&quot;reservePrice&quot;: 200000.99,&#xd;
		&quot;auctionAdvisors&quot;: [&#xd;
			26660,&#xd;
			26661&#xd;
		]&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Appr_submit" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;dealId&quot;: ${dealId},&#xd;
	&quot;notes&quot;: &quot;Notes to Approve the Deal&quot;,&#xd;
	&quot;type&quot;: 4&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/deals/submit</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Appr_loadActivities" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;group&quot;: 5,&#xd;
	&quot;filter&quot;: {&#xd;
		&quot;keyword&quot;: &quot;&quot;,&#xd;
		&quot;tags&quot;: [],&#xd;
		&quot;office&quot;: &quot;&quot;,&#xd;
		&quot;agent&quot;: &quot;&quot;,&#xd;
		&quot;statusFilters&quot;: []&#xd;
	},&#xd;
	&quot;pageIndex&quot;: 1,&#xd;
	&quot;pageSize&quot;: 10,&#xd;
	&quot;sort&quot;: {&#xd;
		&quot;direction&quot;: -1,&#xd;
		&quot;sortBy&quot;: 1,&#xd;
		&quot;displayName&quot;: &quot;New - Old&quot;&#xd;
	},&#xd;
	&quot;tab&quot;: 2&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${environment}pipeline.mnet.services</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/pipeline/activities</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
        <stringProp name="filename">\Pipeline.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">address1,locality,postalCode,areaLevel2,latitude,longitude</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results Fail" enabled="false">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">C:\JR\Perficient\Jmeter Projects\M&amp;M\testFail</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results Success" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">C:\JR\Perficient\Jmeter Projects\M&amp;M\testSuccess</stringProp>
        <boolProp name="ResultCollector.success_only_logging">true</boolProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>true</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>true</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
